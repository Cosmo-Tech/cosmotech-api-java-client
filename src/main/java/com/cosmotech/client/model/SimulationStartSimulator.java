/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.SimulationAnalysisParameterValue;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * the parameters to run directly a Simulator
 */
@ApiModel(description = "the parameters to run directly a Simulator")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-15T18:07:38.724376+02:00[Europe/Paris]")
public class SimulationStartSimulator {
  public static final String SERIALIZED_NAME_SIMULATOR_ID = "simulatorId";
  @SerializedName(SERIALIZED_NAME_SIMULATOR_ID)
  private String simulatorId;

  public static final String SERIALIZED_NAME_SIMULATOR_ANALYSIS_ID = "simulatorAnalysisId";
  @SerializedName(SERIALIZED_NAME_SIMULATOR_ANALYSIS_ID)
  private String simulatorAnalysisId;

  public static final String SERIALIZED_NAME_DATASET_LIST = "datasetList";
  @SerializedName(SERIALIZED_NAME_DATASET_LIST)
  private List<String> datasetList = null;

  public static final String SERIALIZED_NAME_PARAMETERS_VALUES = "parametersValues";
  @SerializedName(SERIALIZED_NAME_PARAMETERS_VALUES)
  private List<SimulationAnalysisParameterValue> parametersValues = null;

  public static final String SERIALIZED_NAME_SEND_INPUT_TO_DATA_WAREHOUSE = "sendInputToDataWarehouse";
  @SerializedName(SERIALIZED_NAME_SEND_INPUT_TO_DATA_WAREHOUSE)
  private Boolean sendInputToDataWarehouse;

  public static final String SERIALIZED_NAME_DATA_WAREHOUSE_D_B = "dataWarehouseDB";
  @SerializedName(SERIALIZED_NAME_DATA_WAREHOUSE_D_B)
  private String dataWarehouseDB;

  public static final String SERIALIZED_NAME_RESULTS_EVENT_BUS_RESOURCE_URI = "resultsEventBusResourceUri";
  @SerializedName(SERIALIZED_NAME_RESULTS_EVENT_BUS_RESOURCE_URI)
  private String resultsEventBusResourceUri;

  public static final String SERIALIZED_NAME_SIMULATION_EVENT_BUS_RESOURCE_URI = "simulationEventBusResourceUri";
  @SerializedName(SERIALIZED_NAME_SIMULATION_EVENT_BUS_RESOURCE_URI)
  private String simulationEventBusResourceUri;


  public SimulationStartSimulator simulatorId(String simulatorId) {
    
    this.simulatorId = simulatorId;
    return this;
  }

   /**
   * the Simulator Id
   * @return simulatorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Simulator Id")

  public String getSimulatorId() {
    return simulatorId;
  }


  public void setSimulatorId(String simulatorId) {
    this.simulatorId = simulatorId;
  }


  public SimulationStartSimulator simulatorAnalysisId(String simulatorAnalysisId) {
    
    this.simulatorAnalysisId = simulatorAnalysisId;
    return this;
  }

   /**
   * the Simulator Analysis id
   * @return simulatorAnalysisId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Simulator Analysis id")

  public String getSimulatorAnalysisId() {
    return simulatorAnalysisId;
  }


  public void setSimulatorAnalysisId(String simulatorAnalysisId) {
    this.simulatorAnalysisId = simulatorAnalysisId;
  }


  public SimulationStartSimulator datasetList(List<String> datasetList) {
    
    this.datasetList = datasetList;
    return this;
  }

  public SimulationStartSimulator addDatasetListItem(String datasetListItem) {
    if (this.datasetList == null) {
      this.datasetList = new ArrayList<String>();
    }
    this.datasetList.add(datasetListItem);
    return this;
  }

   /**
   * the list of Dataset Id associated to this Analysis
   * @return datasetList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of Dataset Id associated to this Analysis")

  public List<String> getDatasetList() {
    return datasetList;
  }


  public void setDatasetList(List<String> datasetList) {
    this.datasetList = datasetList;
  }


  public SimulationStartSimulator parametersValues(List<SimulationAnalysisParameterValue> parametersValues) {
    
    this.parametersValues = parametersValues;
    return this;
  }

  public SimulationStartSimulator addParametersValuesItem(SimulationAnalysisParameterValue parametersValuesItem) {
    if (this.parametersValues == null) {
      this.parametersValues = new ArrayList<SimulationAnalysisParameterValue>();
    }
    this.parametersValues.add(parametersValuesItem);
    return this;
  }

   /**
   * the list of Simulator Analysis parameters values
   * @return parametersValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of Simulator Analysis parameters values")

  public List<SimulationAnalysisParameterValue> getParametersValues() {
    return parametersValues;
  }


  public void setParametersValues(List<SimulationAnalysisParameterValue> parametersValues) {
    this.parametersValues = parametersValues;
  }


  public SimulationStartSimulator sendInputToDataWarehouse(Boolean sendInputToDataWarehouse) {
    
    this.sendInputToDataWarehouse = sendInputToDataWarehouse;
    return this;
  }

   /**
   * whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to Simulation Run
   * @return sendInputToDataWarehouse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to Simulation Run")

  public Boolean getSendInputToDataWarehouse() {
    return sendInputToDataWarehouse;
  }


  public void setSendInputToDataWarehouse(Boolean sendInputToDataWarehouse) {
    this.sendInputToDataWarehouse = sendInputToDataWarehouse;
  }


  public SimulationStartSimulator dataWarehouseDB(String dataWarehouseDB) {
    
    this.dataWarehouseDB = dataWarehouseDB;
    return this;
  }

   /**
   * the DataWarehouse database name to send data if sendInputToDataWarehouse is set
   * @return dataWarehouseDB
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the DataWarehouse database name to send data if sendInputToDataWarehouse is set")

  public String getDataWarehouseDB() {
    return dataWarehouseDB;
  }


  public void setDataWarehouseDB(String dataWarehouseDB) {
    this.dataWarehouseDB = dataWarehouseDB;
  }


  public SimulationStartSimulator resultsEventBusResourceUri(String resultsEventBusResourceUri) {
    
    this.resultsEventBusResourceUri = resultsEventBusResourceUri;
    return this;
  }

   /**
   * the event bus which receive Workspace Simulation results messages. Message won&#39;t be send if this is not set
   * @return resultsEventBusResourceUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the event bus which receive Workspace Simulation results messages. Message won't be send if this is not set")

  public String getResultsEventBusResourceUri() {
    return resultsEventBusResourceUri;
  }


  public void setResultsEventBusResourceUri(String resultsEventBusResourceUri) {
    this.resultsEventBusResourceUri = resultsEventBusResourceUri;
  }


  public SimulationStartSimulator simulationEventBusResourceUri(String simulationEventBusResourceUri) {
    
    this.simulationEventBusResourceUri = simulationEventBusResourceUri;
    return this;
  }

   /**
   * the event bus which receive Workspace Simulation events messages. Message won&#39;t be send if this is not set
   * @return simulationEventBusResourceUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the event bus which receive Workspace Simulation events messages. Message won't be send if this is not set")

  public String getSimulationEventBusResourceUri() {
    return simulationEventBusResourceUri;
  }


  public void setSimulationEventBusResourceUri(String simulationEventBusResourceUri) {
    this.simulationEventBusResourceUri = simulationEventBusResourceUri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulationStartSimulator simulationStartSimulator = (SimulationStartSimulator) o;
    return Objects.equals(this.simulatorId, simulationStartSimulator.simulatorId) &&
        Objects.equals(this.simulatorAnalysisId, simulationStartSimulator.simulatorAnalysisId) &&
        Objects.equals(this.datasetList, simulationStartSimulator.datasetList) &&
        Objects.equals(this.parametersValues, simulationStartSimulator.parametersValues) &&
        Objects.equals(this.sendInputToDataWarehouse, simulationStartSimulator.sendInputToDataWarehouse) &&
        Objects.equals(this.dataWarehouseDB, simulationStartSimulator.dataWarehouseDB) &&
        Objects.equals(this.resultsEventBusResourceUri, simulationStartSimulator.resultsEventBusResourceUri) &&
        Objects.equals(this.simulationEventBusResourceUri, simulationStartSimulator.simulationEventBusResourceUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(simulatorId, simulatorAnalysisId, datasetList, parametersValues, sendInputToDataWarehouse, dataWarehouseDB, resultsEventBusResourceUri, simulationEventBusResourceUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulationStartSimulator {\n");
    sb.append("    simulatorId: ").append(toIndentedString(simulatorId)).append("\n");
    sb.append("    simulatorAnalysisId: ").append(toIndentedString(simulatorAnalysisId)).append("\n");
    sb.append("    datasetList: ").append(toIndentedString(datasetList)).append("\n");
    sb.append("    parametersValues: ").append(toIndentedString(parametersValues)).append("\n");
    sb.append("    sendInputToDataWarehouse: ").append(toIndentedString(sendInputToDataWarehouse)).append("\n");
    sb.append("    dataWarehouseDB: ").append(toIndentedString(dataWarehouseDB)).append("\n");
    sb.append("    resultsEventBusResourceUri: ").append(toIndentedString(resultsEventBusResourceUri)).append("\n");
    sb.append("    simulationEventBusResourceUri: ").append(toIndentedString(simulationEventBusResourceUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

