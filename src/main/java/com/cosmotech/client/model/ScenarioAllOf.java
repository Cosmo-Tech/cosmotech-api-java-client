/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.ScenarioAnalysis;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * a Scenario with detailed information
 */
@ApiModel(description = "a Scenario with detailed information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-15T18:07:38.724376+02:00[Europe/Paris]")
public class ScenarioAllOf {
  public static final String SERIALIZED_NAME_SIMULATOR_NAME = "simulatorName";
  @SerializedName(SERIALIZED_NAME_SIMULATOR_NAME)
  private String simulatorName;

  public static final String SERIALIZED_NAME_SIMULATOR_ANALYSIS_NAME = "simulatorAnalysisName";
  @SerializedName(SERIALIZED_NAME_SIMULATOR_ANALYSIS_NAME)
  private String simulatorAnalysisName;

  public static final String SERIALIZED_NAME_ANALYSIS = "analysis";
  @SerializedName(SERIALIZED_NAME_ANALYSIS)
  private ScenarioAnalysis analysis;

  public static final String SERIALIZED_NAME_SEND_INPUT_TO_DATA_WAREHOUSE = "sendInputToDataWarehouse";
  @SerializedName(SERIALIZED_NAME_SEND_INPUT_TO_DATA_WAREHOUSE)
  private Boolean sendInputToDataWarehouse;


  public ScenarioAllOf simulatorName(String simulatorName) {
    
    this.simulatorName = simulatorName;
    return this;
  }

   /**
   * Get simulatorName
   * @return simulatorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSimulatorName() {
    return simulatorName;
  }


  public void setSimulatorName(String simulatorName) {
    this.simulatorName = simulatorName;
  }


  public ScenarioAllOf simulatorAnalysisName(String simulatorAnalysisName) {
    
    this.simulatorAnalysisName = simulatorAnalysisName;
    return this;
  }

   /**
   * Get simulatorAnalysisName
   * @return simulatorAnalysisName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSimulatorAnalysisName() {
    return simulatorAnalysisName;
  }


  public void setSimulatorAnalysisName(String simulatorAnalysisName) {
    this.simulatorAnalysisName = simulatorAnalysisName;
  }


  public ScenarioAllOf analysis(ScenarioAnalysis analysis) {
    
    this.analysis = analysis;
    return this;
  }

   /**
   * Get analysis
   * @return analysis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ScenarioAnalysis getAnalysis() {
    return analysis;
  }


  public void setAnalysis(ScenarioAnalysis analysis) {
    this.analysis = analysis;
  }


  public ScenarioAllOf sendInputToDataWarehouse(Boolean sendInputToDataWarehouse) {
    
    this.sendInputToDataWarehouse = sendInputToDataWarehouse;
    return this;
  }

   /**
   * default setting for all Analysis to set whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to Simulation Run
   * @return sendInputToDataWarehouse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "default setting for all Analysis to set whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to Simulation Run")

  public Boolean getSendInputToDataWarehouse() {
    return sendInputToDataWarehouse;
  }


  public void setSendInputToDataWarehouse(Boolean sendInputToDataWarehouse) {
    this.sendInputToDataWarehouse = sendInputToDataWarehouse;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScenarioAllOf scenarioAllOf = (ScenarioAllOf) o;
    return Objects.equals(this.simulatorName, scenarioAllOf.simulatorName) &&
        Objects.equals(this.simulatorAnalysisName, scenarioAllOf.simulatorAnalysisName) &&
        Objects.equals(this.analysis, scenarioAllOf.analysis) &&
        Objects.equals(this.sendInputToDataWarehouse, scenarioAllOf.sendInputToDataWarehouse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(simulatorName, simulatorAnalysisName, analysis, sendInputToDataWarehouse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScenarioAllOf {\n");
    sb.append("    simulatorName: ").append(toIndentedString(simulatorName)).append("\n");
    sb.append("    simulatorAnalysisName: ").append(toIndentedString(simulatorAnalysisName)).append("\n");
    sb.append("    analysis: ").append(toIndentedString(analysis)).append("\n");
    sb.append("    sendInputToDataWarehouse: ").append(toIndentedString(sendInputToDataWarehouse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

