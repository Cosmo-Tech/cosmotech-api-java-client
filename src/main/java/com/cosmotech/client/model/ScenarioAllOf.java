/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.ScenarioAnalysis;
import com.cosmotech.client.model.ScenarioFailedAnalysis;
import com.cosmotech.client.model.ScenarioRunningAnalysis;
import com.cosmotech.client.model.ScenarioSuccessfulAnalysis;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * a Scenario with detailed information
 */
@ApiModel(description = "a Scenario with detailed information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-12T19:02:40.729704+02:00[Europe/Paris]")
public class ScenarioAllOf {
  public static final String SERIALIZED_NAME_SIMULATOR_ID = "simulatorId";
  @SerializedName(SERIALIZED_NAME_SIMULATOR_ID)
  private String simulatorId;

  public static final String SERIALIZED_NAME_ANALYSES = "analyses";
  @SerializedName(SERIALIZED_NAME_ANALYSES)
  private List<ScenarioAnalysis> analyses = null;

  public static final String SERIALIZED_NAME_SUCCESSFUL_ANALYSES = "successfulAnalyses";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_ANALYSES)
  private List<ScenarioSuccessfulAnalysis> successfulAnalyses = null;

  public static final String SERIALIZED_NAME_FAILED_ANALYSES = "failedAnalyses";
  @SerializedName(SERIALIZED_NAME_FAILED_ANALYSES)
  private List<ScenarioFailedAnalysis> failedAnalyses = null;

  public static final String SERIALIZED_NAME_RUNNING_ANALYSES = "runningAnalyses";
  @SerializedName(SERIALIZED_NAME_RUNNING_ANALYSES)
  private List<ScenarioRunningAnalysis> runningAnalyses = null;


   /**
   * the Simulator Id associated with this Scenario
   * @return simulatorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Simulator Id associated with this Scenario")

  public String getSimulatorId() {
    return simulatorId;
  }




  public ScenarioAllOf analyses(List<ScenarioAnalysis> analyses) {
    
    this.analyses = analyses;
    return this;
  }

  public ScenarioAllOf addAnalysesItem(ScenarioAnalysis analysesItem) {
    if (this.analyses == null) {
      this.analyses = new ArrayList<ScenarioAnalysis>();
    }
    this.analyses.add(analysesItem);
    return this;
  }

   /**
   * the configuration for next Analysis
   * @return analyses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the configuration for next Analysis")

  public List<ScenarioAnalysis> getAnalyses() {
    return analyses;
  }


  public void setAnalyses(List<ScenarioAnalysis> analyses) {
    this.analyses = analyses;
  }


   /**
   * the configuration and information for last successful Analyses Runs
   * @return successfulAnalyses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the configuration and information for last successful Analyses Runs")

  public List<ScenarioSuccessfulAnalysis> getSuccessfulAnalyses() {
    return successfulAnalyses;
  }




   /**
   * the configuration and information for last failed Analyses Runs
   * @return failedAnalyses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the configuration and information for last failed Analyses Runs")

  public List<ScenarioFailedAnalysis> getFailedAnalyses() {
    return failedAnalyses;
  }




   /**
   * the configuration and information for currently running Analyses Runs
   * @return runningAnalyses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the configuration and information for currently running Analyses Runs")

  public List<ScenarioRunningAnalysis> getRunningAnalyses() {
    return runningAnalyses;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScenarioAllOf scenarioAllOf = (ScenarioAllOf) o;
    return Objects.equals(this.simulatorId, scenarioAllOf.simulatorId) &&
        Objects.equals(this.analyses, scenarioAllOf.analyses) &&
        Objects.equals(this.successfulAnalyses, scenarioAllOf.successfulAnalyses) &&
        Objects.equals(this.failedAnalyses, scenarioAllOf.failedAnalyses) &&
        Objects.equals(this.runningAnalyses, scenarioAllOf.runningAnalyses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(simulatorId, analyses, successfulAnalyses, failedAnalyses, runningAnalyses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScenarioAllOf {\n");
    sb.append("    simulatorId: ").append(toIndentedString(simulatorId)).append("\n");
    sb.append("    analyses: ").append(toIndentedString(analyses)).append("\n");
    sb.append("    successfulAnalyses: ").append(toIndentedString(successfulAnalyses)).append("\n");
    sb.append("    failedAnalyses: ").append(toIndentedString(failedAnalyses)).append("\n");
    sb.append("    runningAnalyses: ").append(toIndentedString(runningAnalyses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

