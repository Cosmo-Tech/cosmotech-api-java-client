/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.ScenarioUser;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * a Scenario with base information
 */
@ApiModel(description = "a Scenario with base information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-20T11:19:04.423677+02:00[Europe/Paris]")
public class ScenarioBase {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_OWNER_ID = "ownerId";
  @SerializedName(SERIALIZED_NAME_OWNER_ID)
  private String ownerId;

  public static final String SERIALIZED_NAME_SOLUTION_ID = "solutionId";
  @SerializedName(SERIALIZED_NAME_SOLUTION_ID)
  private String solutionId;

  public static final String SERIALIZED_NAME_RUN_TEMPLATE_ID = "runTemplateId";
  @SerializedName(SERIALIZED_NAME_RUN_TEMPLATE_ID)
  private String runTemplateId;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private List<ScenarioUser> users = null;

  /**
   * the Scenario state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    CREATED("Created"),
    
    RUNNING("Running"),
    
    SUCCESSFUL("Successful"),
    
    FAILED("Failed");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;


   /**
   * the Scenario unique identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Scenario unique identifier")

  public String getId() {
    return id;
  }




  public ScenarioBase name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * the Scenario name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "the Scenario name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ScenarioBase description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * the Scenario description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Scenario description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ScenarioBase tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public ScenarioBase addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * the list of tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of tags")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public ScenarioBase parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * the Scenario parent id
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Scenario parent id")

  public String getParentId() {
    return parentId;
  }


  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


   /**
   * the user id which own this Scenario
   * @return ownerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the user id which own this Scenario")

  public String getOwnerId() {
    return ownerId;
  }




   /**
   * the Solution Id associated with this Scenario
   * @return solutionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Solution Id associated with this Scenario")

  public String getSolutionId() {
    return solutionId;
  }




  public ScenarioBase runTemplateId(String runTemplateId) {
    
    this.runTemplateId = runTemplateId;
    return this;
  }

   /**
   * the Solution Run Template Id associated with this Scenario
   * @return runTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Solution Run Template Id associated with this Scenario")

  public String getRunTemplateId() {
    return runTemplateId;
  }


  public void setRunTemplateId(String runTemplateId) {
    this.runTemplateId = runTemplateId;
  }


  public ScenarioBase users(List<ScenarioUser> users) {
    
    this.users = users;
    return this;
  }

  public ScenarioBase addUsersItem(ScenarioUser usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<ScenarioUser>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * the list of users Id with their role
   * @return users
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of users Id with their role")

  public List<ScenarioUser> getUsers() {
    return users;
  }


  public void setUsers(List<ScenarioUser> users) {
    this.users = users;
  }


   /**
   * the Scenario state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Scenario state")

  public StateEnum getState() {
    return state;
  }




   /**
   * the Scenario creation date
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Scenario creation date")

  public String getCreationDate() {
    return creationDate;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScenarioBase scenarioBase = (ScenarioBase) o;
    return Objects.equals(this.id, scenarioBase.id) &&
        Objects.equals(this.name, scenarioBase.name) &&
        Objects.equals(this.description, scenarioBase.description) &&
        Objects.equals(this.tags, scenarioBase.tags) &&
        Objects.equals(this.parentId, scenarioBase.parentId) &&
        Objects.equals(this.ownerId, scenarioBase.ownerId) &&
        Objects.equals(this.solutionId, scenarioBase.solutionId) &&
        Objects.equals(this.runTemplateId, scenarioBase.runTemplateId) &&
        Objects.equals(this.users, scenarioBase.users) &&
        Objects.equals(this.state, scenarioBase.state) &&
        Objects.equals(this.creationDate, scenarioBase.creationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, tags, parentId, ownerId, solutionId, runTemplateId, users, state, creationDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScenarioBase {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    solutionId: ").append(toIndentedString(solutionId)).append("\n");
    sb.append("    runTemplateId: ").append(toIndentedString(runTemplateId)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

