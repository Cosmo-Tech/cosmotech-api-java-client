/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.ScenarioAnalysisParameterValue;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * a Scenario configuration for a Simulator Analysis
 */
@ApiModel(description = "a Scenario configuration for a Simulator Analysis")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-16T12:42:31.121121+02:00[Europe/Paris]")
public class ScenarioAnalysis {
  public static final String SERIALIZED_NAME_ANALYSIS_ID = "analysisId";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_ID)
  private String analysisId;

  public static final String SERIALIZED_NAME_DATASET_LIST = "datasetList";
  @SerializedName(SERIALIZED_NAME_DATASET_LIST)
  private List<String> datasetList = null;

  public static final String SERIALIZED_NAME_PARAMETERS_VALUES = "parametersValues";
  @SerializedName(SERIALIZED_NAME_PARAMETERS_VALUES)
  private List<ScenarioAnalysisParameterValue> parametersValues = null;

  public static final String SERIALIZED_NAME_SEND_INPUT_TO_DATA_WAREHOUSE = "sendInputToDataWarehouse";
  @SerializedName(SERIALIZED_NAME_SEND_INPUT_TO_DATA_WAREHOUSE)
  private Boolean sendInputToDataWarehouse;


  public ScenarioAnalysis analysisId(String analysisId) {
    
    this.analysisId = analysisId;
    return this;
  }

   /**
   * the Simulator Analysis Id associated with this Scenario
   * @return analysisId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Simulator Analysis Id associated with this Scenario")

  public String getAnalysisId() {
    return analysisId;
  }


  public void setAnalysisId(String analysisId) {
    this.analysisId = analysisId;
  }


  public ScenarioAnalysis datasetList(List<String> datasetList) {
    
    this.datasetList = datasetList;
    return this;
  }

  public ScenarioAnalysis addDatasetListItem(String datasetListItem) {
    if (this.datasetList == null) {
      this.datasetList = new ArrayList<String>();
    }
    this.datasetList.add(datasetListItem);
    return this;
  }

   /**
   * the list of Dataset Id associated to this Scenario Analysis
   * @return datasetList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of Dataset Id associated to this Scenario Analysis")

  public List<String> getDatasetList() {
    return datasetList;
  }


  public void setDatasetList(List<String> datasetList) {
    this.datasetList = datasetList;
  }


  public ScenarioAnalysis parametersValues(List<ScenarioAnalysisParameterValue> parametersValues) {
    
    this.parametersValues = parametersValues;
    return this;
  }

  public ScenarioAnalysis addParametersValuesItem(ScenarioAnalysisParameterValue parametersValuesItem) {
    if (this.parametersValues == null) {
      this.parametersValues = new ArrayList<ScenarioAnalysisParameterValue>();
    }
    this.parametersValues.add(parametersValuesItem);
    return this;
  }

   /**
   * the list of Simulator Analysis parameters values
   * @return parametersValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of Simulator Analysis parameters values")

  public List<ScenarioAnalysisParameterValue> getParametersValues() {
    return parametersValues;
  }


  public void setParametersValues(List<ScenarioAnalysisParameterValue> parametersValues) {
    this.parametersValues = parametersValues;
  }


  public ScenarioAnalysis sendInputToDataWarehouse(Boolean sendInputToDataWarehouse) {
    
    this.sendInputToDataWarehouse = sendInputToDataWarehouse;
    return this;
  }

   /**
   * whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to Simulation Run
   * @return sendInputToDataWarehouse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to Simulation Run")

  public Boolean getSendInputToDataWarehouse() {
    return sendInputToDataWarehouse;
  }


  public void setSendInputToDataWarehouse(Boolean sendInputToDataWarehouse) {
    this.sendInputToDataWarehouse = sendInputToDataWarehouse;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScenarioAnalysis scenarioAnalysis = (ScenarioAnalysis) o;
    return Objects.equals(this.analysisId, scenarioAnalysis.analysisId) &&
        Objects.equals(this.datasetList, scenarioAnalysis.datasetList) &&
        Objects.equals(this.parametersValues, scenarioAnalysis.parametersValues) &&
        Objects.equals(this.sendInputToDataWarehouse, scenarioAnalysis.sendInputToDataWarehouse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analysisId, datasetList, parametersValues, sendInputToDataWarehouse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScenarioAnalysis {\n");
    sb.append("    analysisId: ").append(toIndentedString(analysisId)).append("\n");
    sb.append("    datasetList: ").append(toIndentedString(datasetList)).append("\n");
    sb.append("    parametersValues: ").append(toIndentedString(parametersValues)).append("\n");
    sb.append("    sendInputToDataWarehouse: ").append(toIndentedString(sendInputToDataWarehouse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

