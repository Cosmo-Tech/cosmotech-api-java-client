/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * a DataWarehouse Query result for the scenario
 */
@ApiModel(description = "a DataWarehouse Query result for the scenario")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-12T19:02:40.729704+02:00[Europe/Paris]")
public class ScenarioDataWarehouseQueryResult {
  public static final String SERIALIZED_NAME_SIMULATION_ID = "simulationId";
  @SerializedName(SERIALIZED_NAME_SIMULATION_ID)
  private String simulationId;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private String result;


  public ScenarioDataWarehouseQueryResult simulationId(String simulationId) {
    
    this.simulationId = simulationId;
    return this;
  }

   /**
   * the simulationId to get the result for
   * @return simulationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the simulationId to get the result for")

  public String getSimulationId() {
    return simulationId;
  }


  public void setSimulationId(String simulationId) {
    this.simulationId = simulationId;
  }


  public ScenarioDataWarehouseQueryResult query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * the DataWarehouse query expressed in native DataWarehouse query language
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the DataWarehouse query expressed in native DataWarehouse query language")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public ScenarioDataWarehouseQueryResult result(String result) {
    
    this.result = result;
    return this;
  }

   /**
   * the DataWarehouse query result
   * @return result
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the DataWarehouse query result")

  public String getResult() {
    return result;
  }


  public void setResult(String result) {
    this.result = result;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScenarioDataWarehouseQueryResult scenarioDataWarehouseQueryResult = (ScenarioDataWarehouseQueryResult) o;
    return Objects.equals(this.simulationId, scenarioDataWarehouseQueryResult.simulationId) &&
        Objects.equals(this.query, scenarioDataWarehouseQueryResult.query) &&
        Objects.equals(this.result, scenarioDataWarehouseQueryResult.result);
  }

  @Override
  public int hashCode() {
    return Objects.hash(simulationId, query, result);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScenarioDataWarehouseQueryResult {\n");
    sb.append("    simulationId: ").append(toIndentedString(simulationId)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

