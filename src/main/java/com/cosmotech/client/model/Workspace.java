/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.WorkspaceServices;
import com.cosmotech.client.model.WorkspaceSimulator;
import com.cosmotech.client.model.WorkspaceUser;
import com.cosmotech.client.model.WorkspaceWebApp;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * a Workspace
 */
@ApiModel(description = "a Workspace")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-12T19:02:40.729704+02:00[Europe/Paris]")
public class Workspace {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_OWNER_ID = "ownerId";
  @SerializedName(SERIALIZED_NAME_OWNER_ID)
  private String ownerId;

  public static final String SERIALIZED_NAME_SIMULATOR = "simulator";
  @SerializedName(SERIALIZED_NAME_SIMULATOR)
  private WorkspaceSimulator simulator;

  public static final String SERIALIZED_NAME_USER_LIST = "userList";
  @SerializedName(SERIALIZED_NAME_USER_LIST)
  private List<WorkspaceUser> userList = null;

  public static final String SERIALIZED_NAME_WEB_APP = "webApp";
  @SerializedName(SERIALIZED_NAME_WEB_APP)
  private WorkspaceWebApp webApp;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private WorkspaceServices services;


   /**
   * the Workspace version unique identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Workspace version unique identifier")

  public String getId() {
    return id;
  }




  public Workspace name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * the Workspace name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "the Workspace name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Workspace description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * the Workspace description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Workspace description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Workspace version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * the Workspace version MAJOR.MINOR.PATCH.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Workspace version MAJOR.MINOR.PATCH.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public Workspace tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Workspace addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * the list of tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of tags")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


   /**
   * the user id which own this workspace
   * @return ownerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the user id which own this workspace")

  public String getOwnerId() {
    return ownerId;
  }




  public Workspace simulator(WorkspaceSimulator simulator) {
    
    this.simulator = simulator;
    return this;
  }

   /**
   * Get simulator
   * @return simulator
  **/
  @ApiModelProperty(required = true, value = "")

  public WorkspaceSimulator getSimulator() {
    return simulator;
  }


  public void setSimulator(WorkspaceSimulator simulator) {
    this.simulator = simulator;
  }


  public Workspace userList(List<WorkspaceUser> userList) {
    
    this.userList = userList;
    return this;
  }

  public Workspace addUserListItem(WorkspaceUser userListItem) {
    if (this.userList == null) {
      this.userList = new ArrayList<WorkspaceUser>();
    }
    this.userList.add(userListItem);
    return this;
  }

   /**
   * the list of users Id with their role
   * @return userList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of users Id with their role")

  public List<WorkspaceUser> getUserList() {
    return userList;
  }


  public void setUserList(List<WorkspaceUser> userList) {
    this.userList = userList;
  }


  public Workspace webApp(WorkspaceWebApp webApp) {
    
    this.webApp = webApp;
    return this;
  }

   /**
   * Get webApp
   * @return webApp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkspaceWebApp getWebApp() {
    return webApp;
  }


  public void setWebApp(WorkspaceWebApp webApp) {
    this.webApp = webApp;
  }


  public Workspace services(WorkspaceServices services) {
    
    this.services = services;
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkspaceServices getServices() {
    return services;
  }


  public void setServices(WorkspaceServices services) {
    this.services = services;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Workspace workspace = (Workspace) o;
    return Objects.equals(this.id, workspace.id) &&
        Objects.equals(this.name, workspace.name) &&
        Objects.equals(this.description, workspace.description) &&
        Objects.equals(this.version, workspace.version) &&
        Objects.equals(this.tags, workspace.tags) &&
        Objects.equals(this.ownerId, workspace.ownerId) &&
        Objects.equals(this.simulator, workspace.simulator) &&
        Objects.equals(this.userList, workspace.userList) &&
        Objects.equals(this.webApp, workspace.webApp) &&
        Objects.equals(this.services, workspace.services);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, version, tags, ownerId, simulator, userList, webApp, services);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Workspace {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    simulator: ").append(toIndentedString(simulator)).append("\n");
    sb.append("    userList: ").append(toIndentedString(userList)).append("\n");
    sb.append("    webApp: ").append(toIndentedString(webApp)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

