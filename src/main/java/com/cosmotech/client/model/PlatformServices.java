/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.PlatformService;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * the list of Platform services
 */
@ApiModel(description = "the list of Platform services")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-21T17:44:46.276366+02:00[Europe/Paris]")
public class PlatformServices {
  /**
   * the Cloud Provider for the services
   */
  @JsonAdapter(ProviderEnum.Adapter.class)
  public enum ProviderEnum {
    AZURE("Azure");

    private String value;

    ProviderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProviderEnum fromValue(String value) {
      for (ProviderEnum b : ProviderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProviderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProviderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProviderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProviderEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PROVIDER = "provider";
  @SerializedName(SERIALIZED_NAME_PROVIDER)
  private ProviderEnum provider;

  public static final String SERIALIZED_NAME_CREDENTIALS = "credentials";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS)
  private Map<String, Object> credentials = null;

  public static final String SERIALIZED_NAME_STORAGE = "storage";
  @SerializedName(SERIALIZED_NAME_STORAGE)
  private PlatformService storage;

  public static final String SERIALIZED_NAME_CORE_CONTAINER_REGISTRY = "coreContainerRegistry";
  @SerializedName(SERIALIZED_NAME_CORE_CONTAINER_REGISTRY)
  private PlatformService coreContainerRegistry;

  public static final String SERIALIZED_NAME_SOLUTIONS_CONTAINER_REGISTRY = "solutionsContainerRegistry";
  @SerializedName(SERIALIZED_NAME_SOLUTIONS_CONTAINER_REGISTRY)
  private PlatformService solutionsContainerRegistry;

  public static final String SERIALIZED_NAME_EVENT_BUS_CLUSTER = "eventBusCluster";
  @SerializedName(SERIALIZED_NAME_EVENT_BUS_CLUSTER)
  private PlatformService eventBusCluster;

  public static final String SERIALIZED_NAME_DATA_WAREHOUSE_CLUSTER = "dataWarehouseCluster";
  @SerializedName(SERIALIZED_NAME_DATA_WAREHOUSE_CLUSTER)
  private PlatformService dataWarehouseCluster;

  public static final String SERIALIZED_NAME_DATABASE_CLUSTER = "databaseCluster";
  @SerializedName(SERIALIZED_NAME_DATABASE_CLUSTER)
  private PlatformService databaseCluster;

  public static final String SERIALIZED_NAME_KEY_VAULT = "keyVault";
  @SerializedName(SERIALIZED_NAME_KEY_VAULT)
  private PlatformService keyVault;

  public static final String SERIALIZED_NAME_KUBERNETES_CLUSTER = "kubernetesCluster";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_CLUSTER)
  private PlatformService kubernetesCluster;

  public static final String SERIALIZED_NAME_DIRECTORY = "directory";
  @SerializedName(SERIALIZED_NAME_DIRECTORY)
  private PlatformService directory;

  public static final String SERIALIZED_NAME_MONITORING = "monitoring";
  @SerializedName(SERIALIZED_NAME_MONITORING)
  private PlatformService monitoring;

  public static final String SERIALIZED_NAME_ANALYTIC = "analytic";
  @SerializedName(SERIALIZED_NAME_ANALYTIC)
  private PlatformService analytic;


  public PlatformServices provider(ProviderEnum provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * the Cloud Provider for the services
   * @return provider
  **/
  @ApiModelProperty(required = true, value = "the Cloud Provider for the services")

  public ProviderEnum getProvider() {
    return provider;
  }


  public void setProvider(ProviderEnum provider) {
    this.provider = provider;
  }


  public PlatformServices credentials(Map<String, Object> credentials) {
    
    this.credentials = credentials;
    return this;
  }

  public PlatformServices putCredentialsItem(String key, Object credentialsItem) {
    if (this.credentials == null) {
      this.credentials = new HashMap<String, Object>();
    }
    this.credentials.put(key, credentialsItem);
    return this;
  }

   /**
   * a freeform credentials object for the Platform. Structure depends on cloud provider
   * @return credentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "a freeform credentials object for the Platform. Structure depends on cloud provider")

  public Map<String, Object> getCredentials() {
    return credentials;
  }


  public void setCredentials(Map<String, Object> credentials) {
    this.credentials = credentials;
  }


  public PlatformServices storage(PlatformService storage) {
    
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getStorage() {
    return storage;
  }


  public void setStorage(PlatformService storage) {
    this.storage = storage;
  }


  public PlatformServices coreContainerRegistry(PlatformService coreContainerRegistry) {
    
    this.coreContainerRegistry = coreContainerRegistry;
    return this;
  }

   /**
   * Get coreContainerRegistry
   * @return coreContainerRegistry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getCoreContainerRegistry() {
    return coreContainerRegistry;
  }


  public void setCoreContainerRegistry(PlatformService coreContainerRegistry) {
    this.coreContainerRegistry = coreContainerRegistry;
  }


  public PlatformServices solutionsContainerRegistry(PlatformService solutionsContainerRegistry) {
    
    this.solutionsContainerRegistry = solutionsContainerRegistry;
    return this;
  }

   /**
   * Get solutionsContainerRegistry
   * @return solutionsContainerRegistry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getSolutionsContainerRegistry() {
    return solutionsContainerRegistry;
  }


  public void setSolutionsContainerRegistry(PlatformService solutionsContainerRegistry) {
    this.solutionsContainerRegistry = solutionsContainerRegistry;
  }


  public PlatformServices eventBusCluster(PlatformService eventBusCluster) {
    
    this.eventBusCluster = eventBusCluster;
    return this;
  }

   /**
   * Get eventBusCluster
   * @return eventBusCluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getEventBusCluster() {
    return eventBusCluster;
  }


  public void setEventBusCluster(PlatformService eventBusCluster) {
    this.eventBusCluster = eventBusCluster;
  }


  public PlatformServices dataWarehouseCluster(PlatformService dataWarehouseCluster) {
    
    this.dataWarehouseCluster = dataWarehouseCluster;
    return this;
  }

   /**
   * Get dataWarehouseCluster
   * @return dataWarehouseCluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getDataWarehouseCluster() {
    return dataWarehouseCluster;
  }


  public void setDataWarehouseCluster(PlatformService dataWarehouseCluster) {
    this.dataWarehouseCluster = dataWarehouseCluster;
  }


  public PlatformServices databaseCluster(PlatformService databaseCluster) {
    
    this.databaseCluster = databaseCluster;
    return this;
  }

   /**
   * Get databaseCluster
   * @return databaseCluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getDatabaseCluster() {
    return databaseCluster;
  }


  public void setDatabaseCluster(PlatformService databaseCluster) {
    this.databaseCluster = databaseCluster;
  }


  public PlatformServices keyVault(PlatformService keyVault) {
    
    this.keyVault = keyVault;
    return this;
  }

   /**
   * Get keyVault
   * @return keyVault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getKeyVault() {
    return keyVault;
  }


  public void setKeyVault(PlatformService keyVault) {
    this.keyVault = keyVault;
  }


  public PlatformServices kubernetesCluster(PlatformService kubernetesCluster) {
    
    this.kubernetesCluster = kubernetesCluster;
    return this;
  }

   /**
   * Get kubernetesCluster
   * @return kubernetesCluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getKubernetesCluster() {
    return kubernetesCluster;
  }


  public void setKubernetesCluster(PlatformService kubernetesCluster) {
    this.kubernetesCluster = kubernetesCluster;
  }


  public PlatformServices directory(PlatformService directory) {
    
    this.directory = directory;
    return this;
  }

   /**
   * Get directory
   * @return directory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getDirectory() {
    return directory;
  }


  public void setDirectory(PlatformService directory) {
    this.directory = directory;
  }


  public PlatformServices monitoring(PlatformService monitoring) {
    
    this.monitoring = monitoring;
    return this;
  }

   /**
   * Get monitoring
   * @return monitoring
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getMonitoring() {
    return monitoring;
  }


  public void setMonitoring(PlatformService monitoring) {
    this.monitoring = monitoring;
  }


  public PlatformServices analytic(PlatformService analytic) {
    
    this.analytic = analytic;
    return this;
  }

   /**
   * Get analytic
   * @return analytic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformService getAnalytic() {
    return analytic;
  }


  public void setAnalytic(PlatformService analytic) {
    this.analytic = analytic;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlatformServices platformServices = (PlatformServices) o;
    return Objects.equals(this.provider, platformServices.provider) &&
        Objects.equals(this.credentials, platformServices.credentials) &&
        Objects.equals(this.storage, platformServices.storage) &&
        Objects.equals(this.coreContainerRegistry, platformServices.coreContainerRegistry) &&
        Objects.equals(this.solutionsContainerRegistry, platformServices.solutionsContainerRegistry) &&
        Objects.equals(this.eventBusCluster, platformServices.eventBusCluster) &&
        Objects.equals(this.dataWarehouseCluster, platformServices.dataWarehouseCluster) &&
        Objects.equals(this.databaseCluster, platformServices.databaseCluster) &&
        Objects.equals(this.keyVault, platformServices.keyVault) &&
        Objects.equals(this.kubernetesCluster, platformServices.kubernetesCluster) &&
        Objects.equals(this.directory, platformServices.directory) &&
        Objects.equals(this.monitoring, platformServices.monitoring) &&
        Objects.equals(this.analytic, platformServices.analytic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(provider, credentials, storage, coreContainerRegistry, solutionsContainerRegistry, eventBusCluster, dataWarehouseCluster, databaseCluster, keyVault, kubernetesCluster, directory, monitoring, analytic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlatformServices {\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    coreContainerRegistry: ").append(toIndentedString(coreContainerRegistry)).append("\n");
    sb.append("    solutionsContainerRegistry: ").append(toIndentedString(solutionsContainerRegistry)).append("\n");
    sb.append("    eventBusCluster: ").append(toIndentedString(eventBusCluster)).append("\n");
    sb.append("    dataWarehouseCluster: ").append(toIndentedString(dataWarehouseCluster)).append("\n");
    sb.append("    databaseCluster: ").append(toIndentedString(databaseCluster)).append("\n");
    sb.append("    keyVault: ").append(toIndentedString(keyVault)).append("\n");
    sb.append("    kubernetesCluster: ").append(toIndentedString(kubernetesCluster)).append("\n");
    sb.append("    directory: ").append(toIndentedString(directory)).append("\n");
    sb.append("    monitoring: ").append(toIndentedString(monitoring)).append("\n");
    sb.append("    analytic: ").append(toIndentedString(analytic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

