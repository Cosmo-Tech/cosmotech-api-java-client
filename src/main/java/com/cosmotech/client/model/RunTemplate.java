/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.8-SNAPSHOT
 * Contact: platform@cosmotech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.RunTemplateStepSource;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * a Solution Run Template
 */
@ApiModel(description = "a Solution Run Template")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-31T13:38:44.296524322Z[Etc/UTC]")
public class RunTemplate {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CSM_SIMULATION = "csmSimulation";
  @SerializedName(SERIALIZED_NAME_CSM_SIMULATION)
  private String csmSimulation;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_COMPUTE_SIZE = "computeSize";
  @SerializedName(SERIALIZED_NAME_COMPUTE_SIZE)
  private String computeSize;

  public static final String SERIALIZED_NAME_FETCH_DATASETS = "fetchDatasets";
  @SerializedName(SERIALIZED_NAME_FETCH_DATASETS)
  private Boolean fetchDatasets;

  public static final String SERIALIZED_NAME_FETCH_SCENARIO_PARAMETERS = "fetchScenarioParameters";
  @SerializedName(SERIALIZED_NAME_FETCH_SCENARIO_PARAMETERS)
  private Boolean fetchScenarioParameters;

  public static final String SERIALIZED_NAME_APPLY_PARAMETERS = "applyParameters";
  @SerializedName(SERIALIZED_NAME_APPLY_PARAMETERS)
  private Boolean applyParameters;

  public static final String SERIALIZED_NAME_VALIDATE_DATA = "validateData";
  @SerializedName(SERIALIZED_NAME_VALIDATE_DATA)
  private Boolean validateData;

  public static final String SERIALIZED_NAME_SEND_DATASETS_TO_DATA_WAREHOUSE = "sendDatasetsToDataWarehouse";
  @SerializedName(SERIALIZED_NAME_SEND_DATASETS_TO_DATA_WAREHOUSE)
  private Boolean sendDatasetsToDataWarehouse;

  public static final String SERIALIZED_NAME_SEND_INPUT_PARAMETERS_TO_DATA_WAREHOUSE = "sendInputParametersToDataWarehouse";
  @SerializedName(SERIALIZED_NAME_SEND_INPUT_PARAMETERS_TO_DATA_WAREHOUSE)
  private Boolean sendInputParametersToDataWarehouse;

  public static final String SERIALIZED_NAME_PRE_RUN = "preRun";
  @SerializedName(SERIALIZED_NAME_PRE_RUN)
  private Boolean preRun;

  public static final String SERIALIZED_NAME_RUN = "run";
  @SerializedName(SERIALIZED_NAME_RUN)
  private Boolean run;

  public static final String SERIALIZED_NAME_POST_RUN = "postRun";
  @SerializedName(SERIALIZED_NAME_POST_RUN)
  private Boolean postRun;

  public static final String SERIALIZED_NAME_PARAMETERS_JSON = "parametersJson";
  @SerializedName(SERIALIZED_NAME_PARAMETERS_JSON)
  private Boolean parametersJson;

  public static final String SERIALIZED_NAME_PARAMETERS_HANDLER_SOURCE = "parametersHandlerSource";
  @SerializedName(SERIALIZED_NAME_PARAMETERS_HANDLER_SOURCE)
  private RunTemplateStepSource parametersHandlerSource;

  public static final String SERIALIZED_NAME_DATASET_VALIDATOR_SOURCE = "datasetValidatorSource";
  @SerializedName(SERIALIZED_NAME_DATASET_VALIDATOR_SOURCE)
  private RunTemplateStepSource datasetValidatorSource;

  public static final String SERIALIZED_NAME_PRE_RUN_SOURCE = "preRunSource";
  @SerializedName(SERIALIZED_NAME_PRE_RUN_SOURCE)
  private RunTemplateStepSource preRunSource;

  public static final String SERIALIZED_NAME_RUN_SOURCE = "runSource";
  @SerializedName(SERIALIZED_NAME_RUN_SOURCE)
  private RunTemplateStepSource runSource;

  public static final String SERIALIZED_NAME_POST_RUN_SOURCE = "postRunSource";
  @SerializedName(SERIALIZED_NAME_POST_RUN_SOURCE)
  private RunTemplateStepSource postRunSource;

  public static final String SERIALIZED_NAME_PARAMETER_GROUPS = "parameterGroups";
  @SerializedName(SERIALIZED_NAME_PARAMETER_GROUPS)
  private List<String> parameterGroups = null;

  public static final String SERIALIZED_NAME_STACK_STEPS = "stackSteps";
  @SerializedName(SERIALIZED_NAME_STACK_STEPS)
  private Boolean stackSteps;


  public RunTemplate id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * the Solution Run Template id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "the Solution Run Template id")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RunTemplate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * the Run Template name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "the Run Template name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RunTemplate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * the Run Template description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Run Template description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public RunTemplate csmSimulation(String csmSimulation) {
    
    this.csmSimulation = csmSimulation;
    return this;
  }

   /**
   * the Cosmo Tech simulation name. This information is send to the Engine. Mandatory information if no Engine is defined
   * @return csmSimulation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Cosmo Tech simulation name. This information is send to the Engine. Mandatory information if no Engine is defined")

  public String getCsmSimulation() {
    return csmSimulation;
  }


  public void setCsmSimulation(String csmSimulation) {
    this.csmSimulation = csmSimulation;
  }


  public RunTemplate tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public RunTemplate addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * the list of Run Template tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of Run Template tags")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public RunTemplate computeSize(String computeSize) {
    
    this.computeSize = computeSize;
    return this;
  }

   /**
   * the compute size needed for this Run Template. Standard sizes are basic and highcpu. Default is basic
   * @return computeSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the compute size needed for this Run Template. Standard sizes are basic and highcpu. Default is basic")

  public String getComputeSize() {
    return computeSize;
  }


  public void setComputeSize(String computeSize) {
    this.computeSize = computeSize;
  }


  public RunTemplate fetchDatasets(Boolean fetchDatasets) {
    
    this.fetchDatasets = fetchDatasets;
    return this;
  }

   /**
   * whether or not the fetch dataset step is done
   * @return fetchDatasets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the fetch dataset step is done")

  public Boolean getFetchDatasets() {
    return fetchDatasets;
  }


  public void setFetchDatasets(Boolean fetchDatasets) {
    this.fetchDatasets = fetchDatasets;
  }


  public RunTemplate fetchScenarioParameters(Boolean fetchScenarioParameters) {
    
    this.fetchScenarioParameters = fetchScenarioParameters;
    return this;
  }

   /**
   * whether or not the fetch parameters step is done
   * @return fetchScenarioParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the fetch parameters step is done")

  public Boolean getFetchScenarioParameters() {
    return fetchScenarioParameters;
  }


  public void setFetchScenarioParameters(Boolean fetchScenarioParameters) {
    this.fetchScenarioParameters = fetchScenarioParameters;
  }


  public RunTemplate applyParameters(Boolean applyParameters) {
    
    this.applyParameters = applyParameters;
    return this;
  }

   /**
   * whether or not the apply parameter step is done
   * @return applyParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the apply parameter step is done")

  public Boolean getApplyParameters() {
    return applyParameters;
  }


  public void setApplyParameters(Boolean applyParameters) {
    this.applyParameters = applyParameters;
  }


  public RunTemplate validateData(Boolean validateData) {
    
    this.validateData = validateData;
    return this;
  }

   /**
   * whether or not the validate step is done
   * @return validateData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the validate step is done")

  public Boolean getValidateData() {
    return validateData;
  }


  public void setValidateData(Boolean validateData) {
    this.validateData = validateData;
  }


  public RunTemplate sendDatasetsToDataWarehouse(Boolean sendDatasetsToDataWarehouse) {
    
    this.sendDatasetsToDataWarehouse = sendDatasetsToDataWarehouse;
    return this;
  }

   /**
   * whether or not the Datasets values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting
   * @return sendDatasetsToDataWarehouse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the Datasets values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting")

  public Boolean getSendDatasetsToDataWarehouse() {
    return sendDatasetsToDataWarehouse;
  }


  public void setSendDatasetsToDataWarehouse(Boolean sendDatasetsToDataWarehouse) {
    this.sendDatasetsToDataWarehouse = sendDatasetsToDataWarehouse;
  }


  public RunTemplate sendInputParametersToDataWarehouse(Boolean sendInputParametersToDataWarehouse) {
    
    this.sendInputParametersToDataWarehouse = sendInputParametersToDataWarehouse;
    return this;
  }

   /**
   * whether or not the input parameters values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting
   * @return sendInputParametersToDataWarehouse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the input parameters values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting")

  public Boolean getSendInputParametersToDataWarehouse() {
    return sendInputParametersToDataWarehouse;
  }


  public void setSendInputParametersToDataWarehouse(Boolean sendInputParametersToDataWarehouse) {
    this.sendInputParametersToDataWarehouse = sendInputParametersToDataWarehouse;
  }


  public RunTemplate preRun(Boolean preRun) {
    
    this.preRun = preRun;
    return this;
  }

   /**
   * whether or not the pre-run step is done
   * @return preRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the pre-run step is done")

  public Boolean getPreRun() {
    return preRun;
  }


  public void setPreRun(Boolean preRun) {
    this.preRun = preRun;
  }


  public RunTemplate run(Boolean run) {
    
    this.run = run;
    return this;
  }

   /**
   * whether or not the run step is done
   * @return run
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the run step is done")

  public Boolean getRun() {
    return run;
  }


  public void setRun(Boolean run) {
    this.run = run;
  }


  public RunTemplate postRun(Boolean postRun) {
    
    this.postRun = postRun;
    return this;
  }

   /**
   * whether or not the post-run step is done
   * @return postRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not the post-run step is done")

  public Boolean getPostRun() {
    return postRun;
  }


  public void setPostRun(Boolean postRun) {
    this.postRun = postRun;
  }


  public RunTemplate parametersJson(Boolean parametersJson) {
    
    this.parametersJson = parametersJson;
    return this;
  }

   /**
   * whether or not to store the scenario parameters in json instead of csv
   * @return parametersJson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not to store the scenario parameters in json instead of csv")

  public Boolean getParametersJson() {
    return parametersJson;
  }


  public void setParametersJson(Boolean parametersJson) {
    this.parametersJson = parametersJson;
  }


  public RunTemplate parametersHandlerSource(RunTemplateStepSource parametersHandlerSource) {
    
    this.parametersHandlerSource = parametersHandlerSource;
    return this;
  }

   /**
   * Get parametersHandlerSource
   * @return parametersHandlerSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RunTemplateStepSource getParametersHandlerSource() {
    return parametersHandlerSource;
  }


  public void setParametersHandlerSource(RunTemplateStepSource parametersHandlerSource) {
    this.parametersHandlerSource = parametersHandlerSource;
  }


  public RunTemplate datasetValidatorSource(RunTemplateStepSource datasetValidatorSource) {
    
    this.datasetValidatorSource = datasetValidatorSource;
    return this;
  }

   /**
   * Get datasetValidatorSource
   * @return datasetValidatorSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RunTemplateStepSource getDatasetValidatorSource() {
    return datasetValidatorSource;
  }


  public void setDatasetValidatorSource(RunTemplateStepSource datasetValidatorSource) {
    this.datasetValidatorSource = datasetValidatorSource;
  }


  public RunTemplate preRunSource(RunTemplateStepSource preRunSource) {
    
    this.preRunSource = preRunSource;
    return this;
  }

   /**
   * Get preRunSource
   * @return preRunSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RunTemplateStepSource getPreRunSource() {
    return preRunSource;
  }


  public void setPreRunSource(RunTemplateStepSource preRunSource) {
    this.preRunSource = preRunSource;
  }


  public RunTemplate runSource(RunTemplateStepSource runSource) {
    
    this.runSource = runSource;
    return this;
  }

   /**
   * Get runSource
   * @return runSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RunTemplateStepSource getRunSource() {
    return runSource;
  }


  public void setRunSource(RunTemplateStepSource runSource) {
    this.runSource = runSource;
  }


  public RunTemplate postRunSource(RunTemplateStepSource postRunSource) {
    
    this.postRunSource = postRunSource;
    return this;
  }

   /**
   * Get postRunSource
   * @return postRunSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RunTemplateStepSource getPostRunSource() {
    return postRunSource;
  }


  public void setPostRunSource(RunTemplateStepSource postRunSource) {
    this.postRunSource = postRunSource;
  }


  public RunTemplate parameterGroups(List<String> parameterGroups) {
    
    this.parameterGroups = parameterGroups;
    return this;
  }

  public RunTemplate addParameterGroupsItem(String parameterGroupsItem) {
    if (this.parameterGroups == null) {
      this.parameterGroups = new ArrayList<String>();
    }
    this.parameterGroups.add(parameterGroupsItem);
    return this;
  }

   /**
   * the ordered list of parameters groups for the Run Template
   * @return parameterGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the ordered list of parameters groups for the Run Template")

  public List<String> getParameterGroups() {
    return parameterGroups;
  }


  public void setParameterGroups(List<String> parameterGroups) {
    this.parameterGroups = parameterGroups;
  }


  public RunTemplate stackSteps(Boolean stackSteps) {
    
    this.stackSteps = stackSteps;
    return this;
  }

   /**
   * whether or not to stack adjacent scenario run steps in one container run which will chain steps
   * @return stackSteps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether or not to stack adjacent scenario run steps in one container run which will chain steps")

  public Boolean getStackSteps() {
    return stackSteps;
  }


  public void setStackSteps(Boolean stackSteps) {
    this.stackSteps = stackSteps;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunTemplate runTemplate = (RunTemplate) o;
    return Objects.equals(this.id, runTemplate.id) &&
        Objects.equals(this.name, runTemplate.name) &&
        Objects.equals(this.description, runTemplate.description) &&
        Objects.equals(this.csmSimulation, runTemplate.csmSimulation) &&
        Objects.equals(this.tags, runTemplate.tags) &&
        Objects.equals(this.computeSize, runTemplate.computeSize) &&
        Objects.equals(this.fetchDatasets, runTemplate.fetchDatasets) &&
        Objects.equals(this.fetchScenarioParameters, runTemplate.fetchScenarioParameters) &&
        Objects.equals(this.applyParameters, runTemplate.applyParameters) &&
        Objects.equals(this.validateData, runTemplate.validateData) &&
        Objects.equals(this.sendDatasetsToDataWarehouse, runTemplate.sendDatasetsToDataWarehouse) &&
        Objects.equals(this.sendInputParametersToDataWarehouse, runTemplate.sendInputParametersToDataWarehouse) &&
        Objects.equals(this.preRun, runTemplate.preRun) &&
        Objects.equals(this.run, runTemplate.run) &&
        Objects.equals(this.postRun, runTemplate.postRun) &&
        Objects.equals(this.parametersJson, runTemplate.parametersJson) &&
        Objects.equals(this.parametersHandlerSource, runTemplate.parametersHandlerSource) &&
        Objects.equals(this.datasetValidatorSource, runTemplate.datasetValidatorSource) &&
        Objects.equals(this.preRunSource, runTemplate.preRunSource) &&
        Objects.equals(this.runSource, runTemplate.runSource) &&
        Objects.equals(this.postRunSource, runTemplate.postRunSource) &&
        Objects.equals(this.parameterGroups, runTemplate.parameterGroups) &&
        Objects.equals(this.stackSteps, runTemplate.stackSteps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, csmSimulation, tags, computeSize, fetchDatasets, fetchScenarioParameters, applyParameters, validateData, sendDatasetsToDataWarehouse, sendInputParametersToDataWarehouse, preRun, run, postRun, parametersJson, parametersHandlerSource, datasetValidatorSource, preRunSource, runSource, postRunSource, parameterGroups, stackSteps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunTemplate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    csmSimulation: ").append(toIndentedString(csmSimulation)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    computeSize: ").append(toIndentedString(computeSize)).append("\n");
    sb.append("    fetchDatasets: ").append(toIndentedString(fetchDatasets)).append("\n");
    sb.append("    fetchScenarioParameters: ").append(toIndentedString(fetchScenarioParameters)).append("\n");
    sb.append("    applyParameters: ").append(toIndentedString(applyParameters)).append("\n");
    sb.append("    validateData: ").append(toIndentedString(validateData)).append("\n");
    sb.append("    sendDatasetsToDataWarehouse: ").append(toIndentedString(sendDatasetsToDataWarehouse)).append("\n");
    sb.append("    sendInputParametersToDataWarehouse: ").append(toIndentedString(sendInputParametersToDataWarehouse)).append("\n");
    sb.append("    preRun: ").append(toIndentedString(preRun)).append("\n");
    sb.append("    run: ").append(toIndentedString(run)).append("\n");
    sb.append("    postRun: ").append(toIndentedString(postRun)).append("\n");
    sb.append("    parametersJson: ").append(toIndentedString(parametersJson)).append("\n");
    sb.append("    parametersHandlerSource: ").append(toIndentedString(parametersHandlerSource)).append("\n");
    sb.append("    datasetValidatorSource: ").append(toIndentedString(datasetValidatorSource)).append("\n");
    sb.append("    preRunSource: ").append(toIndentedString(preRunSource)).append("\n");
    sb.append("    runSource: ").append(toIndentedString(runSource)).append("\n");
    sb.append("    postRunSource: ").append(toIndentedString(postRunSource)).append("\n");
    sb.append("    parameterGroups: ").append(toIndentedString(parameterGroups)).append("\n");
    sb.append("    stackSteps: ").append(toIndentedString(stackSteps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

