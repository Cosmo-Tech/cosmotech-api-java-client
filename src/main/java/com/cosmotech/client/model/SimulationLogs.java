/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cosmotech.client.model.SimulationContainerLogs;
import com.cosmotech.client.model.SimulationLogsOptions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * the simulation logs returned by all containers
 */
@ApiModel(description = "the simulation logs returned by all containers")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-19T18:44:12.915410+02:00[Europe/Paris]")
public class SimulationLogs {
  public static final String SERIALIZED_NAME_SIMULATION_ID = "simulationId";
  @SerializedName(SERIALIZED_NAME_SIMULATION_ID)
  private String simulationId;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private SimulationLogsOptions options;

  public static final String SERIALIZED_NAME_INIT_LOGS = "initLogs";
  @SerializedName(SERIALIZED_NAME_INIT_LOGS)
  private List<SimulationContainerLogs> initLogs = null;

  public static final String SERIALIZED_NAME_MAIN_LOGS = "mainLogs";
  @SerializedName(SERIALIZED_NAME_MAIN_LOGS)
  private SimulationContainerLogs mainLogs;


   /**
   * the Simulation Id
   * @return simulationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the Simulation Id")

  public String getSimulationId() {
    return simulationId;
  }




  public SimulationLogs options(SimulationLogsOptions options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SimulationLogsOptions getOptions() {
    return options;
  }


  public void setOptions(SimulationLogsOptions options) {
    this.options = options;
  }


   /**
   * the list of simulation logs for init containers
   * @return initLogs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the list of simulation logs for init containers")

  public List<SimulationContainerLogs> getInitLogs() {
    return initLogs;
  }




  public SimulationLogs mainLogs(SimulationContainerLogs mainLogs) {
    
    this.mainLogs = mainLogs;
    return this;
  }

   /**
   * Get mainLogs
   * @return mainLogs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SimulationContainerLogs getMainLogs() {
    return mainLogs;
  }


  public void setMainLogs(SimulationContainerLogs mainLogs) {
    this.mainLogs = mainLogs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulationLogs simulationLogs = (SimulationLogs) o;
    return Objects.equals(this.simulationId, simulationLogs.simulationId) &&
        Objects.equals(this.options, simulationLogs.options) &&
        Objects.equals(this.initLogs, simulationLogs.initLogs) &&
        Objects.equals(this.mainLogs, simulationLogs.mainLogs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(simulationId, options, initLogs, mainLogs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulationLogs {\n");
    sb.append("    simulationId: ").append(toIndentedString(simulationId)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    initLogs: ").append(toIndentedString(initLogs)).append("\n");
    sb.append("    mainLogs: ").append(toIndentedString(mainLogs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

