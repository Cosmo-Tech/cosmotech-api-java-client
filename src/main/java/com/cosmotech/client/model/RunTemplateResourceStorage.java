/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * RunTemplateResourceStorage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-07T19:33:04.431588+02:00[Europe/Paris]")
public class RunTemplateResourceStorage {
  /**
   * the storage type
   */
  @JsonAdapter(StorageTypeEnum.Adapter.class)
  public enum StorageTypeEnum {
    LOCAL("local"),
    
    CLOUDSTORAGE("cloudStorage");

    private String value;

    StorageTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StorageTypeEnum fromValue(String value) {
      for (StorageTypeEnum b : StorageTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StorageTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StorageTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StorageTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StorageTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "storageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private StorageTypeEnum storageType;

  public static final String SERIALIZED_NAME_RESOURCE_PATH = "resourcePath";
  @SerializedName(SERIALIZED_NAME_RESOURCE_PATH)
  private String resourcePath;

  public static final String SERIALIZED_NAME_STORAGE_OPTIONS = "storageOptions";
  @SerializedName(SERIALIZED_NAME_STORAGE_OPTIONS)
  private Map<String, Object> storageOptions = null;


  public RunTemplateResourceStorage storageType(StorageTypeEnum storageType) {
    
    this.storageType = storageType;
    return this;
  }

   /**
   * the storage type
   * @return storageType
  **/
  @ApiModelProperty(required = true, value = "the storage type")

  public StorageTypeEnum getStorageType() {
    return storageType;
  }


  public void setStorageType(StorageTypeEnum storageType) {
    this.storageType = storageType;
  }


  public RunTemplateResourceStorage resourcePath(String resourcePath) {
    
    this.resourcePath = resourcePath;
    return this;
  }

   /**
   * the resource path
   * @return resourcePath
  **/
  @ApiModelProperty(required = true, value = "the resource path")

  public String getResourcePath() {
    return resourcePath;
  }


  public void setResourcePath(String resourcePath) {
    this.resourcePath = resourcePath;
  }


  public RunTemplateResourceStorage storageOptions(Map<String, Object> storageOptions) {
    
    this.storageOptions = storageOptions;
    return this;
  }

  public RunTemplateResourceStorage putStorageOptionsItem(String key, Object storageOptionsItem) {
    if (this.storageOptions == null) {
      this.storageOptions = new HashMap<String, Object>();
    }
    this.storageOptions.put(key, storageOptionsItem);
    return this;
  }

   /**
   * freeform options for storage
   * @return storageOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "freeform options for storage")

  public Map<String, Object> getStorageOptions() {
    return storageOptions;
  }


  public void setStorageOptions(Map<String, Object> storageOptions) {
    this.storageOptions = storageOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunTemplateResourceStorage runTemplateResourceStorage = (RunTemplateResourceStorage) o;
    return Objects.equals(this.storageType, runTemplateResourceStorage.storageType) &&
        Objects.equals(this.resourcePath, runTemplateResourceStorage.resourcePath) &&
        Objects.equals(this.storageOptions, runTemplateResourceStorage.storageOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageType, resourcePath, storageOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunTemplateResourceStorage {\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    resourcePath: ").append(toIndentedString(resourcePath)).append("\n");
    sb.append("    storageOptions: ").append(toIndentedString(storageOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

