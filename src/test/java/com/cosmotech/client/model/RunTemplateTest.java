/*
 * Cosmo Tech Platform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 4.0.1-onprem
 * Contact: platform@cosmotech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import com.cosmotech.client.model.DeleteHistoricalData;
import com.cosmotech.client.model.RunTemplateOrchestrator;
import com.cosmotech.client.model.RunTemplateResourceSizing;
import com.cosmotech.client.model.RunTemplateStepSource;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RunTemplate
 */
public class RunTemplateTest {
    private final RunTemplate model = new RunTemplate();

    /**
     * Model tests for RunTemplate
     */
    @Test
    public void testRunTemplate() {
        // TODO: test RunTemplate
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'csmSimulation'
     */
    @Test
    public void csmSimulationTest() {
        // TODO: test csmSimulation
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'computeSize'
     */
    @Test
    public void computeSizeTest() {
        // TODO: test computeSize
    }

    /**
     * Test the property 'runSizing'
     */
    @Test
    public void runSizingTest() {
        // TODO: test runSizing
    }

    /**
     * Test the property 'noDataIngestionState'
     */
    @Test
    public void noDataIngestionStateTest() {
        // TODO: test noDataIngestionState
    }

    /**
     * Test the property 'fetchDatasets'
     */
    @Test
    public void fetchDatasetsTest() {
        // TODO: test fetchDatasets
    }

    /**
     * Test the property 'scenarioDataDownloadTransform'
     */
    @Test
    public void scenarioDataDownloadTransformTest() {
        // TODO: test scenarioDataDownloadTransform
    }

    /**
     * Test the property 'fetchScenarioParameters'
     */
    @Test
    public void fetchScenarioParametersTest() {
        // TODO: test fetchScenarioParameters
    }

    /**
     * Test the property 'applyParameters'
     */
    @Test
    public void applyParametersTest() {
        // TODO: test applyParameters
    }

    /**
     * Test the property 'validateData'
     */
    @Test
    public void validateDataTest() {
        // TODO: test validateData
    }

    /**
     * Test the property 'sendDatasetsToDataWarehouse'
     */
    @Test
    public void sendDatasetsToDataWarehouseTest() {
        // TODO: test sendDatasetsToDataWarehouse
    }

    /**
     * Test the property 'sendInputParametersToDataWarehouse'
     */
    @Test
    public void sendInputParametersToDataWarehouseTest() {
        // TODO: test sendInputParametersToDataWarehouse
    }

    /**
     * Test the property 'preRun'
     */
    @Test
    public void preRunTest() {
        // TODO: test preRun
    }

    /**
     * Test the property 'run'
     */
    @Test
    public void runTest() {
        // TODO: test run
    }

    /**
     * Test the property 'postRun'
     */
    @Test
    public void postRunTest() {
        // TODO: test postRun
    }

    /**
     * Test the property 'parametersJson'
     */
    @Test
    public void parametersJsonTest() {
        // TODO: test parametersJson
    }

    /**
     * Test the property 'parametersHandlerSource'
     */
    @Test
    public void parametersHandlerSourceTest() {
        // TODO: test parametersHandlerSource
    }

    /**
     * Test the property 'datasetValidatorSource'
     */
    @Test
    public void datasetValidatorSourceTest() {
        // TODO: test datasetValidatorSource
    }

    /**
     * Test the property 'preRunSource'
     */
    @Test
    public void preRunSourceTest() {
        // TODO: test preRunSource
    }

    /**
     * Test the property 'runSource'
     */
    @Test
    public void runSourceTest() {
        // TODO: test runSource
    }

    /**
     * Test the property 'postRunSource'
     */
    @Test
    public void postRunSourceTest() {
        // TODO: test postRunSource
    }

    /**
     * Test the property 'scenariodataTransformSource'
     */
    @Test
    public void scenariodataTransformSourceTest() {
        // TODO: test scenariodataTransformSource
    }

    /**
     * Test the property 'parameterGroups'
     */
    @Test
    public void parameterGroupsTest() {
        // TODO: test parameterGroups
    }

    /**
     * Test the property 'stackSteps'
     */
    @Test
    public void stackStepsTest() {
        // TODO: test stackSteps
    }

    /**
     * Test the property 'gitRepositoryUrl'
     */
    @Test
    public void gitRepositoryUrlTest() {
        // TODO: test gitRepositoryUrl
    }

    /**
     * Test the property 'gitBranchName'
     */
    @Test
    public void gitBranchNameTest() {
        // TODO: test gitBranchName
    }

    /**
     * Test the property 'runTemplateSourceDir'
     */
    @Test
    public void runTemplateSourceDirTest() {
        // TODO: test runTemplateSourceDir
    }

    /**
     * Test the property 'orchestratorType'
     */
    @Test
    public void orchestratorTypeTest() {
        // TODO: test orchestratorType
    }

    /**
     * Test the property 'executionTimeout'
     */
    @Test
    public void executionTimeoutTest() {
        // TODO: test executionTimeout
    }

    /**
     * Test the property 'deleteHistoricalData'
     */
    @Test
    public void deleteHistoricalDataTest() {
        // TODO: test deleteHistoricalData
    }

}
