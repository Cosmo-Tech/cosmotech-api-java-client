/*
 * Cosmo Tech Platform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 3.1.1
 * Contact: platform@cosmotech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import com.cosmotech.client.model.RunContainer;
import com.cosmotech.client.model.RunState;
import com.cosmotech.client.model.RunTemplateParameterValue;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Run
 */
public class RunTest {
    private final Run model = new Run();

    /**
     * Model tests for Run
     */
    @Test
    public void testRun() {
        // TODO: test Run
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'organizationId'
     */
    @Test
    public void organizationIdTest() {
        // TODO: test organizationId
    }

    /**
     * Test the property 'workflowId'
     */
    @Test
    public void workflowIdTest() {
        // TODO: test workflowId
    }

    /**
     * Test the property 'csmSimulationRun'
     */
    @Test
    public void csmSimulationRunTest() {
        // TODO: test csmSimulationRun
    }

    /**
     * Test the property 'generateName'
     */
    @Test
    public void generateNameTest() {
        // TODO: test generateName
    }

    /**
     * Test the property 'workflowName'
     */
    @Test
    public void workflowNameTest() {
        // TODO: test workflowName
    }

    /**
     * Test the property 'ownerId'
     */
    @Test
    public void ownerIdTest() {
        // TODO: test ownerId
    }

    /**
     * Test the property 'workspaceId'
     */
    @Test
    public void workspaceIdTest() {
        // TODO: test workspaceId
    }

    /**
     * Test the property 'workspaceKey'
     */
    @Test
    public void workspaceKeyTest() {
        // TODO: test workspaceKey
    }

    /**
     * Test the property 'runnerId'
     */
    @Test
    public void runnerIdTest() {
        // TODO: test runnerId
    }

    /**
     * Test the property 'solutionId'
     */
    @Test
    public void solutionIdTest() {
        // TODO: test solutionId
    }

    /**
     * Test the property 'runTemplateId'
     */
    @Test
    public void runTemplateIdTest() {
        // TODO: test runTemplateId
    }

    /**
     * Test the property 'computeSize'
     */
    @Test
    public void computeSizeTest() {
        // TODO: test computeSize
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'datasetList'
     */
    @Test
    public void datasetListTest() {
        // TODO: test datasetList
    }

    /**
     * Test the property 'parametersValues'
     */
    @Test
    public void parametersValuesTest() {
        // TODO: test parametersValues
    }

    /**
     * Test the property 'nodeLabel'
     */
    @Test
    public void nodeLabelTest() {
        // TODO: test nodeLabel
    }

    /**
     * Test the property 'containers'
     */
    @Test
    public void containersTest() {
        // TODO: test containers
    }

}
