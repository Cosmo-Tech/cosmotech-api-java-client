/*
 * Cosmo Tech Platform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 3.1.8-adp
 * Contact: platform@cosmotech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import com.cosmotech.client.model.DatasetCompatibility;
import com.cosmotech.client.model.DatasetConnector;
import com.cosmotech.client.model.DatasetSecurity;
import com.cosmotech.client.model.DatasetSourceType;
import com.cosmotech.client.model.SourceInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Dataset
 */
public class DatasetTest {
    private final Dataset model = new Dataset();

    /**
     * Model tests for Dataset
     */
    @Test
    public void testDataset() {
        // TODO: test Dataset
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'ownerId'
     */
    @Test
    public void ownerIdTest() {
        // TODO: test ownerId
    }

    /**
     * Test the property 'ownerName'
     */
    @Test
    public void ownerNameTest() {
        // TODO: test ownerName
    }

    /**
     * Test the property 'organizationId'
     */
    @Test
    public void organizationIdTest() {
        // TODO: test organizationId
    }

    /**
     * Test the property 'parentId'
     */
    @Test
    public void parentIdTest() {
        // TODO: test parentId
    }

    /**
     * Test the property 'linkedWorkspaceIdList'
     */
    @Test
    public void linkedWorkspaceIdListTest() {
        // TODO: test linkedWorkspaceIdList
    }

    /**
     * Test the property 'twingraphId'
     */
    @Test
    public void twingraphIdTest() {
        // TODO: test twingraphId
    }

    /**
     * Test the property 'main'
     */
    @Test
    public void mainTest() {
        // TODO: test main
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'refreshDate'
     */
    @Test
    public void refreshDateTest() {
        // TODO: test refreshDate
    }

    /**
     * Test the property 'sourceType'
     */
    @Test
    public void sourceTypeTest() {
        // TODO: test sourceType
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'ingestionStatus'
     */
    @Test
    public void ingestionStatusTest() {
        // TODO: test ingestionStatus
    }

    /**
     * Test the property 'twincacheStatus'
     */
    @Test
    public void twincacheStatusTest() {
        // TODO: test twincacheStatus
    }

    /**
     * Test the property 'queries'
     */
    @Test
    public void queriesTest() {
        // TODO: test queries
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'connector'
     */
    @Test
    public void connectorTest() {
        // TODO: test connector
    }

    /**
     * Test the property 'fragmentsIds'
     */
    @Test
    public void fragmentsIdsTest() {
        // TODO: test fragmentsIds
    }

    /**
     * Test the property 'validatorId'
     */
    @Test
    public void validatorIdTest() {
        // TODO: test validatorId
    }

    /**
     * Test the property 'compatibility'
     */
    @Test
    public void compatibilityTest() {
        // TODO: test compatibility
    }

    /**
     * Test the property 'security'
     */
    @Test
    public void securityTest() {
        // TODO: test security
    }

}
