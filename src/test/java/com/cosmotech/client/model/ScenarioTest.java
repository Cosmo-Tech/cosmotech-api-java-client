/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 2.0.4-SNAPSHOT
 * Contact: platform@cosmotech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.model;

import com.cosmotech.client.model.ScenarioJobState;
import com.cosmotech.client.model.ScenarioLastRun;
import com.cosmotech.client.model.ScenarioRunTemplateParameterValue;
import com.cosmotech.client.model.ScenarioUser;
import com.cosmotech.client.model.ScenarioValidationStatus;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Scenario
 */
public class ScenarioTest {
    private final Scenario model = new Scenario();

    /**
     * Model tests for Scenario
     */
    @Test
    public void testScenario() {
        // TODO: test Scenario
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'parentId'
     */
    @Test
    public void parentIdTest() {
        // TODO: test parentId
    }

    /**
     * Test the property 'ownerId'
     */
    @Test
    public void ownerIdTest() {
        // TODO: test ownerId
    }

    /**
     * Test the property 'rootId'
     */
    @Test
    public void rootIdTest() {
        // TODO: test rootId
    }

    /**
     * Test the property 'solutionId'
     */
    @Test
    public void solutionIdTest() {
        // TODO: test solutionId
    }

    /**
     * Test the property 'runTemplateId'
     */
    @Test
    public void runTemplateIdTest() {
        // TODO: test runTemplateId
    }

    /**
     * Test the property 'workspaceId'
     */
    @Test
    public void workspaceIdTest() {
        // TODO: test workspaceId
    }

    /**
     * Test the property 'users'
     */
    @Test
    public void usersTest() {
        // TODO: test users
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'lastUpdate'
     */
    @Test
    public void lastUpdateTest() {
        // TODO: test lastUpdate
    }

    /**
     * Test the property 'ownerName'
     */
    @Test
    public void ownerNameTest() {
        // TODO: test ownerName
    }

    /**
     * Test the property 'solutionName'
     */
    @Test
    public void solutionNameTest() {
        // TODO: test solutionName
    }

    /**
     * Test the property 'runTemplateName'
     */
    @Test
    public void runTemplateNameTest() {
        // TODO: test runTemplateName
    }

    /**
     * Test the property 'datasetList'
     */
    @Test
    public void datasetListTest() {
        // TODO: test datasetList
    }

    /**
     * Test the property 'parametersValues'
     */
    @Test
    public void parametersValuesTest() {
        // TODO: test parametersValues
    }

    /**
     * Test the property 'lastRun'
     */
    @Test
    public void lastRunTest() {
        // TODO: test lastRun
    }

    /**
     * Test the property 'parentLastRun'
     */
    @Test
    public void parentLastRunTest() {
        // TODO: test parentLastRun
    }

    /**
     * Test the property 'rootLastRun'
     */
    @Test
    public void rootLastRunTest() {
        // TODO: test rootLastRun
    }

    /**
     * Test the property 'validationStatus'
     */
    @Test
    public void validationStatusTest() {
        // TODO: test validationStatus
    }

}
