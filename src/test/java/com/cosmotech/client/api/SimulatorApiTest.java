/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.api;

import com.cosmotech.client.ApiException;
import java.io.File;
import com.cosmotech.client.model.Simulator;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SimulatorApi
 */
@Ignore
public class SimulatorApiTest {

    private final SimulatorApi api = new SimulatorApi();

    
    /**
     * Register a new simulator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSimulatorTest() throws ApiException {
        String organizationId = null;
        Simulator simulator = null;
        Simulator response = api.createSimulator(organizationId, simulator);

        // TODO: test validations
    }
    
    /**
     * Delete a simulator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSimulatorTest() throws ApiException {
        String organizationId = null;
        String simulatorId = null;
        Simulator response = api.deleteSimulator(organizationId, simulatorId);

        // TODO: test validations
    }
    
    /**
     * List all Simulators
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findAllSimulatorsTest() throws ApiException {
        String organizationId = null;
        List<Simulator> response = api.findAllSimulators(organizationId);

        // TODO: test validations
    }
    
    /**
     * Get the details of a simulator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findSimulatorByIdTest() throws ApiException {
        String organizationId = null;
        String simulatorId = null;
        Simulator response = api.findSimulatorById(organizationId, simulatorId);

        // TODO: test validations
    }
    
    /**
     * Update a simulator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSimulatorTest() throws ApiException {
        String organizationId = null;
        String simulatorId = null;
        Simulator simulator = null;
        Simulator response = api.updateSimulator(organizationId, simulatorId, simulator);

        // TODO: test validations
    }
    
    /**
     * Upload and register a new simulator
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadTest() throws ApiException {
        String organizationId = null;
        File body = null;
        Simulator response = api.upload(organizationId, body);

        // TODO: test validations
    }
    
}
