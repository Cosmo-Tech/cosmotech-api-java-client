/*
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cosmotech.client.api;

import com.cosmotech.client.ApiException;
import java.io.File;
import com.cosmotech.client.model.Solution;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SolutionApi
 */
@Ignore
public class SolutionApiTest {

    private final SolutionApi api = new SolutionApi();

    
    /**
     * Register a new solution
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSolutionTest() throws ApiException {
        String organizationId = null;
        Solution solution = null;
        Solution response = api.createSolution(organizationId, solution);

        // TODO: test validations
    }
    
    /**
     * Delete a solution
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSolutionTest() throws ApiException {
        String organizationId = null;
        String solutionId = null;
        Solution response = api.deleteSolution(organizationId, solutionId);

        // TODO: test validations
    }
    
    /**
     * List all Solutions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findAllSolutionsTest() throws ApiException {
        String organizationId = null;
        List<Solution> response = api.findAllSolutions(organizationId);

        // TODO: test validations
    }
    
    /**
     * Get the details of a solution
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findSolutionByIdTest() throws ApiException {
        String organizationId = null;
        String solutionId = null;
        Solution response = api.findSolutionById(organizationId, solutionId);

        // TODO: test validations
    }
    
    /**
     * Update a solution
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSolutionTest() throws ApiException {
        String organizationId = null;
        String solutionId = null;
        Solution solution = null;
        Solution response = api.updateSolution(organizationId, solutionId, solution);

        // TODO: test validations
    }
    
    /**
     * Upload and register a new solution
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadTest() throws ApiException {
        String organizationId = null;
        File body = null;
        Solution response = api.upload(organizationId, body);

        // TODO: test validations
    }
    
}
