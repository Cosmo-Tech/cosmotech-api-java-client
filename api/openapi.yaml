openapi: 3.0.3
info:
  contact:
    name: Repository
    url: https://github.com/Cosmo-Tech/cosmotech-api
  description: Cosmo Tech Platform API
  license:
    name: MIT License
    url: https://github.com/Cosmo-Tech/cosmotech-api/blob/main/LICENSE
  title: Cosmo Tech Plaform API
  version: 0.0.1-SNAPSHOT
externalDocs:
  description: Portal
  url: https://portal.cosmotech.com/
servers:
- description: Local dev environment
  url: http://localhost:8080
- description: Production
  url: https://api.azure.cosmo-platform.com
security:
- oAuth2AuthCode: []
tags:
- description: Solution Management
  name: solution
- description: Platform Management
  name: platform
- description: Workspace Management
  name: workspace
- description: Connector Management
  name: connector
- description: Organization Management
  name: organization
- description: ScenarioRun Management
  name: scenariorun
- description: User Management
  name: user
- description: Scenario Management
  name: scenario
- description: Dataset Management
  name: dataset
paths:
  /organizations/{organization_id}/solutions:
    get:
      operationId: findAllSolutions
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Two:
                  $ref: '#/components/examples/OneSolution'
              schema:
                items:
                  $ref: '#/components/schemas/Solution'
                type: array
          description: the solution details
      summary: List all Solutions
      tags:
      - solution
      x-accepts: application/json
    post:
      operationId: createSolution
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Brewery:
                $ref: '#/components/examples/Brewery'
            schema:
              $ref: '#/components/schemas/Solution'
        description: the Solution to create
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Brewery:
                  $ref: '#/components/examples/Brewery'
              schema:
                $ref: '#/components/schemas/Solution'
          description: the solution details
        "400":
          description: Bad request
      summary: Register a new solution
      tags:
      - solution
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/solutions/upload:
    post:
      operationId: upload
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/yaml:
            examples:
              ADTConnector:
                $ref: '#/components/examples/Brewery'
            schema:
              format: binary
              type: string
        description: the Solution to upload and register
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                ADTConnector:
                  $ref: '#/components/examples/Brewery'
              schema:
                $ref: '#/components/schemas/Solution'
          description: the solution details
        "400":
          description: Bad request
      summary: Upload and register a new solution
      tags:
      - solution
      x-contentType: application/yaml
      x-accepts: application/json
  /organizations/{organization_id}/solutions/{solution_id}:
    delete:
      operationId: deleteSolution
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Solution identifier
        explode: false
        in: path
        name: solution_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Brewery:
                  $ref: '#/components/examples/Brewery'
              schema:
                $ref: '#/components/schemas/Solution'
          description: the solution details
        "400":
          description: Bad request
        "404":
          description: the Solution specified is unknown or you don't have access
            to it
      summary: Delete a solution
      tags:
      - solution
      x-accepts: application/json
    get:
      operationId: findSolutionById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Solution identifier
        explode: false
        in: path
        name: solution_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Brewery:
                  $ref: '#/components/examples/Brewery'
              schema:
                $ref: '#/components/schemas/Solution'
          description: the Solution details
        "404":
          description: the Solution specified is unknown or you don't have access
            to it
      summary: Get the details of a solution
      tags:
      - solution
      x-accepts: application/json
    patch:
      operationId: updateSolution
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Solution identifier
        explode: false
        in: path
        name: solution_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryUpdate:
                $ref: '#/components/examples/BreweryUpdate'
            schema:
              $ref: '#/components/schemas/Solution'
        description: the new Solution details.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryUpdated:
                  $ref: '#/components/examples/BreweryUpdated'
              schema:
                $ref: '#/components/schemas/Solution'
          description: the solution details
        "400":
          description: Bad request
        "404":
          description: the Solution specified is unknown or you don't have access
            to it
      summary: Update a solution
      tags:
      - solution
      x-contentType: application/json
      x-accepts: application/json
  /platform:
    get:
      operationId: getPlatform
      responses:
        "200":
          content:
            application/json:
              examples:
                CosmoTechPlatform:
                  $ref: '#/components/examples/CosmoTechPlatform'
              schema:
                $ref: '#/components/schemas/Platform'
          description: the Platform details
      summary: Get the details of the platform
      tags:
      - platform
      x-accepts: application/json
    patch:
      operationId: updatePlatform
      requestBody:
        content:
          application/json:
            examples:
              CosmoTechPlatformUpdate:
                $ref: '#/components/examples/CosmoTechPlatformUpdate'
            schema:
              $ref: '#/components/schemas/Platform'
        description: the new Platform details.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CosmoTechPlatformUpdated:
                  $ref: '#/components/examples/CosmoTechPlatformUpdated'
              schema:
                $ref: '#/components/schemas/Platform'
          description: the platform details
        "400":
          description: Bad request
        "404":
          description: the Platform specified is unknown or you don't have access
            to it
      summary: Update a platform
      tags:
      - platform
      x-contentType: application/json
      x-accepts: application/json
    post:
      operationId: createPlatform
      requestBody:
        content:
          application/json:
            examples:
              CosmoTechPlatform:
                $ref: '#/components/examples/CosmoTechPlatform'
            schema:
              $ref: '#/components/schemas/Platform'
        description: the Platform to create
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                CosmoTechPlatform:
                  $ref: '#/components/examples/CosmoTechPlatform'
              schema:
                $ref: '#/components/schemas/Platform'
          description: the platform details
        "400":
          description: Bad request
      summary: Create a new platform
      tags:
      - platform
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/workspaces:
    get:
      operationId: findAllWorkspaces
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                OneWorkspace:
                  $ref: '#/components/examples/OneWorkspace'
              schema:
                items:
                  $ref: '#/components/schemas/Workspace'
                type: array
          description: the workspace details
      summary: List all Workspaces
      tags:
      - workspace
      x-accepts: application/json
    post:
      operationId: createWorkspace
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Workspace:
                $ref: '#/components/examples/BreweryWorkspaceCreateIn'
            schema:
              $ref: '#/components/schemas/Workspace'
        description: the Workspace to create
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Workspace:
                  $ref: '#/components/examples/BreweryWorkspace'
              schema:
                $ref: '#/components/schemas/Workspace'
          description: the workspace details
        "400":
          description: Bad request
      summary: Create a new workspace
      tags:
      - workspace
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}:
    delete:
      operationId: deleteWorkspace
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Workspace:
                  $ref: '#/components/examples/BreweryWorkspace'
              schema:
                $ref: '#/components/schemas/Workspace'
          description: the workspace details
        "400":
          description: Bad request
        "404":
          description: the Workspace specified is unknown or you don't have access
            to it
      summary: Delete a workspace
      tags:
      - workspace
      x-accepts: application/json
    get:
      operationId: findWorkspaceById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Workspace:
                  $ref: '#/components/examples/BreweryWorkspace'
              schema:
                $ref: '#/components/schemas/Workspace'
          description: the Workspace details
        "404":
          description: the Workspace specified is unknown or you don't have access
            to it
      summary: Get the details of an workspace
      tags:
      - workspace
      x-accepts: application/json
    patch:
      operationId: updateWorkspace
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryUpdate:
                $ref: '#/components/examples/BreweryWorkspaceUpdate'
            schema:
              $ref: '#/components/schemas/Workspace'
        description: the new Workspace details.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryUpdated:
                  $ref: '#/components/examples/BreweryWorkspaceUpdated'
              schema:
                $ref: '#/components/schemas/Workspace'
          description: the workspace details
        "400":
          description: Bad request
        "404":
          description: the Workspace specified is unknown or you don't have access
            to it
      summary: Update a workspace
      tags:
      - workspace
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/files:
    delete:
      operationId: deleteWorkspaceFile
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              WorkspaceFileToDeleteExample:
                $ref: '#/components/examples/BreweryWorkspaceFile'
            schema:
              $ref: '#/components/schemas/WorkspaceFile'
        description: the file to upload
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryWorkspaceFile:
                  $ref: '#/components/examples/BreweryWorkspaceFile'
              schema:
                $ref: '#/components/schemas/WorkspaceFile'
          description: the file resource details
        "400":
          description: Bad request
        "404":
          description: the Workspace specified is unknown or you don't have access
            to it
      summary: Delete a workspace file
      tags:
      - workspace
      x-contentType: application/json
      x-accepts: application/json
    get:
      operationId: findAllWorkspaceFiles
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                WorkspaceFiles:
                  $ref: '#/components/examples/WorkspaceFiles'
              schema:
                items:
                  $ref: '#/components/schemas/WorkspaceFile'
                type: array
          description: the workspace files
        "404":
          description: the Workspace specified is unknown or you don't have access
            to it
      summary: List all Workspace files
      tags:
      - workspace
      x-accepts: application/json
    post:
      operationId: uploadWorkspaceFile
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                fileName:
                  format: binary
                  type: string
              type: object
        description: the file to upload
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                BreweryWorkspaceFile:
                  $ref: '#/components/examples/BreweryWorkspaceFile'
              schema:
                $ref: '#/components/schemas/WorkspaceFile'
          description: the file resource details
        "400":
          description: Bad request
      summary: Upload a file for the Workspace
      tags:
      - workspace
      x-contentType: multipart/form-data
      x-accepts: application/json
  /connectors:
    get:
      operationId: findAllConnectors
      responses:
        "200":
          content:
            application/json:
              examples:
                OneConnector:
                  $ref: '#/components/examples/OneConnector'
              schema:
                items:
                  $ref: '#/components/schemas/Connector'
                type: array
          description: the connector details
      summary: List all Connectors
      tags:
      - connector
      x-accepts: application/json
    post:
      operationId: registerConnector
      requestBody:
        content:
          application/json:
            examples:
              ADTConnector:
                $ref: '#/components/examples/ADTConnector'
            schema:
              $ref: '#/components/schemas/Connector'
        description: the Connector to register
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                ADTConnector:
                  $ref: '#/components/examples/ADTConnector'
              schema:
                $ref: '#/components/schemas/Connector'
          description: the connector details
        "400":
          description: Bad request
      summary: Register a new connector
      tags:
      - connector
      x-contentType: application/json
      x-accepts: application/json
  /connectors/upload:
    post:
      operationId: uploadConnector
      requestBody:
        content:
          application/yaml:
            examples:
              ADTConnector:
                $ref: '#/components/examples/ADTConnector'
            schema:
              format: binary
              type: string
        description: the Connector to upload and register
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                ADTConnector:
                  $ref: '#/components/examples/ADTConnector'
              schema:
                $ref: '#/components/schemas/Connector'
          description: the connector details
        "400":
          description: Bad request
      summary: Upload and register a new connector
      tags:
      - connector
      x-contentType: application/yaml
      x-accepts: application/json
  /connectors/{connector_id}:
    delete:
      operationId: unregisterConnector
      parameters:
      - description: the Connector identifier
        explode: false
        in: path
        name: connector_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ADTConnector:
                  $ref: '#/components/examples/ADTConnector'
              schema:
                $ref: '#/components/schemas/Connector'
          description: the connector details
        "400":
          description: Bad request
        "404":
          description: the Connector specified is unknown or you don't have access
            to it
      summary: Unregister an connector
      tags:
      - connector
      x-accepts: application/json
    get:
      operationId: findConnectorById
      parameters:
      - description: the Connector identifier
        explode: false
        in: path
        name: connector_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ADTConnector:
                  $ref: '#/components/examples/ADTConnector'
              schema:
                $ref: '#/components/schemas/Connector'
          description: the Connector details
        "404":
          description: the Connector specified is unknown or you don't have access
            to it
      summary: Get the details of an connector
      tags:
      - connector
      x-accepts: application/json
  /organizations:
    get:
      operationId: findAllOrganizations
      responses:
        "200":
          content:
            application/json:
              examples:
                TwoOrganizations:
                  $ref: '#/components/examples/TwoOrganizations'
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: the organization details
      summary: List all Organizations
      tags:
      - organization
      x-accepts: application/json
    post:
      operationId: registerOrganization
      requestBody:
        content:
          application/json:
            examples:
              NewOrganizationIn:
                $ref: '#/components/examples/NewOrganizationIn'
            schema:
              $ref: '#/components/schemas/Organization'
        description: the Organization to register
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                CosmoOrganization:
                  $ref: '#/components/examples/CosmoOrganization'
              schema:
                $ref: '#/components/schemas/Organization'
          description: the organization details
        "400":
          description: Bad request
      summary: Register a new organization
      tags:
      - organization
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}:
    delete:
      operationId: unregisterOrganization
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                CosmoOrganization:
                  $ref: '#/components/examples/CosmoOrganization'
              schema:
                $ref: '#/components/schemas/Organization'
          description: the organization details
        "400":
          description: Bad request
        "404":
          description: the Organization specified is unknown or you don't have access
            to it
      summary: Unregister an organization
      tags:
      - organization
      x-accepts: application/json
    get:
      operationId: findOrganizationById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                CosmoOrganization:
                  $ref: '#/components/examples/CosmoOrganization'
              schema:
                $ref: '#/components/schemas/Organization'
          description: the Organization details
        "404":
          description: the Organization specified is unknown or you don't have access
            to it
      summary: Get the details of an organization
      tags:
      - organization
      x-accepts: application/json
    patch:
      operationId: updateOrganization
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ChangeName:
                description: Change the name of Organization 1 to CosmoTech Digital
                  Twins Engine
                summary: Change Name of Organization
                value:
                  name: CosmoTech Digital Twins Engine
              AddUser:
                description: Add the user Charles to organization Cosmo Tech
                summary: Add a user
                value:
                  users:
                  - name: Charles
                    roles:
                    - Developer
              RenameUser:
                description: Rename the user Charles to Xavier
                summary: Rename a user
                value:
                  users:
                  - id: "3"
                    name: Xavier
              RemoveUser:
                description: Remove the user Charles from organization Cosmo Tech
                summary: Remove a user
                value:
                  users:
                  - id: "1"
                    name: Bob
                    roles:
                    - Admin
                  - id: "2"
                    name: Alice
                    roles:
                    - User
            schema:
              $ref: '#/components/schemas/Organization'
        description: the new Organization details
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CosmoThreeUsers:
                  $ref: '#/components/examples/CosmoThreeUsers'
              schema:
                $ref: '#/components/schemas/Organization'
          description: the organization details
        "400":
          description: Bad request
        "404":
          description: the Organization specified is unknown or you don't have access
            to it
      summary: Update an organization
      tags:
      - organization
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/scenarioruns/search:
    post:
      operationId: searchScenarioRuns
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BrewerySearch:
                $ref: '#/components/examples/BrewerySearch'
            schema:
              $ref: '#/components/schemas/ScenarioRunSearch'
        description: the ScenarioRun search parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                OneScenarioRun:
                  $ref: '#/components/examples/OneScenarioRun'
              schema:
                items:
                  $ref: '#/components/schemas/ScenarioRun'
                type: array
          description: the scenariorun details
      summary: Search ScenarioRuns
      tags:
      - scenariorun
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/scenarioruns/start:
    post:
      operationId: startScenarioRunScenario
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ScenarioRunStart:
                $ref: '#/components/examples/BreweryScenarioRunStart'
            schema:
              $ref: '#/components/schemas/ScenarioRunStart'
        description: the Scenario information to start
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRun'
              schema:
                $ref: '#/components/schemas/ScenarioRun'
          description: the scenariorun details
        "400":
          description: Bad request
        "404":
          description: the Scenario specified is unknown or you don't have access
            to it
      summary: Start a new scenariorun for a Scenario
      tags:
      - scenariorun
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/scenarioruns/startsolution:
    post:
      operationId: startScenarioRunSolution
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ScenarioRunStartSolution:
                $ref: '#/components/examples/BreweryScenarioRunStartSolution'
            schema:
              $ref: '#/components/schemas/ScenarioRunStartSolution'
        description: the Solution Run Template information to start
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRunSolution'
              schema:
                $ref: '#/components/schemas/ScenarioRun'
          description: the scenariorun details
        "400":
          description: Bad request
        "404":
          description: the Scenario specified is unknown or you don't have access
            to it
      summary: Start a new scenariorun for a Solution Run Template
      tags:
      - scenariorun
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/scenarioruns/startcontainers:
    post:
      operationId: startScenarioRunContainers
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ScenarioRunStartContainers:
                $ref: '#/components/examples/BreweryScenarioRunStartContainers'
            schema:
              $ref: '#/components/schemas/ScenarioRunStartContainers'
        description: the raw containers definition
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRunContainer'
              schema:
                $ref: '#/components/schemas/ScenarioRun'
          description: the scenariorun details
        "400":
          description: Bad request
        "404":
          description: the Scenario specified is unknown or you don't have access
            to it
      summary: Start a new scenariorun with raw containers definition
      tags:
      - scenariorun
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/scenarioruns/{scenariorun_id}:
    delete:
      operationId: deleteScenarioRun
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ScenarioRun identifier
        explode: false
        in: path
        name: scenariorun_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRun'
              schema:
                $ref: '#/components/schemas/ScenarioRun'
          description: the scenariorun details
        "400":
          description: Bad request
        "404":
          description: the ScenarioRun specified is unknown or you don't have access
            to it
      summary: Delete a scenariorun
      tags:
      - scenariorun
      x-accepts: application/json
    get:
      operationId: findScenarioRunById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ScenarioRun identifier
        explode: false
        in: path
        name: scenariorun_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRun'
              schema:
                $ref: '#/components/schemas/ScenarioRun'
          description: the ScenarioRun details
        "404":
          description: the ScenarioRun specified is unknown or you don't have access
            to it
      summary: Get the details of a scenariorun
      tags:
      - scenariorun
      x-accepts: application/json
  /organizations/{organization_id}/scenarioruns/{scenariorun_id}/logs/search:
    post:
      operationId: searchScenarioRunLogs
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ScenarioRun identifier
        explode: false
        in: path
        name: scenariorun_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ScenarioRunLogsOptions:
                $ref: '#/components/examples/BreweryScenarioRunLogsOptions'
            schema:
              $ref: '#/components/schemas/ScenarioRunLogsOptions'
        description: the options to search logs
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRunLogs'
              schema:
                $ref: '#/components/schemas/ScenarioRunLogs'
          description: the ScenarioRun logs
        "400":
          description: Bad request
        "404":
          description: the ScenarioRun specified is unknown or you don't have access
            to it
      summary: Search the logs of a scenariorun
      tags:
      - scenariorun
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarioruns:
    get:
      operationId: getWorkspaceScenarioRuns
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                OneScenarioRun:
                  $ref: '#/components/examples/OneScenarioRun'
              schema:
                items:
                  $ref: '#/components/schemas/ScenarioRun'
                type: array
          description: the scenariorun details list
      summary: get the list of ScenarioRuns for the Workspace
      tags:
      - scenariorun
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/scenarioruns:
    get:
      operationId: getScenarioScenarioRuns
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                OneScenarioRun:
                  $ref: '#/components/examples/OneScenarioRun'
              schema:
                items:
                  $ref: '#/components/schemas/ScenarioRun'
                type: array
          description: the scenariorun details list
      summary: get the list of ScenarioRuns for the Scenario
      tags:
      - scenariorun
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/scenarioruns/{scenariorun_id}:
    get:
      operationId: getScenarioScenarioRun
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ScenarioRun identifier
        explode: false
        in: path
        name: scenariorun_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRun'
              schema:
                $ref: '#/components/schemas/ScenarioRun'
          description: the scenariorun details
      summary: get the ScenarioRun for the Scenario
      tags:
      - scenariorun
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/scenarioruns/{scenariorun_id}/logs:
    get:
      operationId: getScenarioScenarioRunLogs
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ScenarioRun identifier
        explode: false
        in: path
        name: scenariorun_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRunLogs'
              schema:
                $ref: '#/components/schemas/ScenarioRunLogs'
          description: the scenariorun logs details
      summary: get the logs for the ScenarioRun
      tags:
      - scenariorun
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/run:
    post:
      operationId: runScenario
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRun'
              schema:
                $ref: '#/components/schemas/ScenarioRun'
          description: the scenariorun details
      summary: run a ScenarioRun for the Scenario
      tags:
      - scenariorun
      x-accepts: application/json
  /users:
    get:
      operationId: findAllUsers
      responses:
        "200":
          content:
            application/json:
              examples:
                Two:
                  $ref: '#/components/examples/TwoUsers'
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: the user details
      summary: List all Users
      tags:
      - user
      x-accepts: application/json
    post:
      operationId: registerUser
      requestBody:
        content:
          application/json:
            examples:
              BobCreateIn:
                $ref: '#/components/examples/BobCreateIn'
            schema:
              $ref: '#/components/schemas/User'
        description: the User to register
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Bob:
                  $ref: '#/components/examples/Bob'
              schema:
                $ref: '#/components/schemas/User'
          description: the user details
        "400":
          description: Bad request
      summary: Register a new user
      tags:
      - user
      x-contentType: application/json
      x-accepts: application/json
  /users/{user_id}:
    delete:
      operationId: unregisterUser
      parameters:
      - description: the User identifier
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Bob:
                  $ref: '#/components/examples/Bob'
              schema:
                $ref: '#/components/schemas/User'
          description: the user details
        "400":
          description: Bad request
        "404":
          description: the User specified is unknown or you don't have access to it
      summary: Unregister an user
      tags:
      - user
      x-accepts: application/json
    get:
      operationId: findUserById
      parameters:
      - description: the User identifier
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Bob:
                  $ref: '#/components/examples/Bob'
              schema:
                $ref: '#/components/schemas/User'
          description: the User details
        "404":
          description: the User specified is unknown or you don't have access to it
      summary: Get the details of an user
      tags:
      - user
      x-accepts: application/json
    patch:
      operationId: updateUser
      parameters:
      - description: the User identifier
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BobyUpdateIn:
                $ref: '#/components/examples/BobyUpdateIn'
            schema:
              $ref: '#/components/schemas/User'
        description: the new User details. Organization membership is handled in Organzation
          service.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BobyUpdated:
                  $ref: '#/components/examples/BobyUpdated'
              schema:
                $ref: '#/components/schemas/User'
          description: the user details
        "400":
          description: Bad request
        "404":
          description: the User specified is unknown or you don't have access to it
      summary: Update an user
      tags:
      - user
      x-contentType: application/json
      x-accepts: application/json
  /users/me:
    get:
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              examples:
                Bob:
                  $ref: '#/components/examples/Bob'
              schema:
                $ref: '#/components/schemas/User'
          description: the User details
        "404":
          description: the User specified is unknown or you don't have access to it
      summary: Get the details of an user
      tags:
      - user
      x-accepts: application/json
  /organizations/{organization_id}/me:
    get:
      operationId: getOrganizationCurrentUser
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Bob:
                  $ref: '#/components/examples/BobOrganization'
              schema:
                $ref: '#/components/schemas/User'
          description: the User details
        "404":
          description: the User specified is unknown or you don't have access to it
      summary: Get the details of an user with roles for an Organization
      tags:
      - user
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/me:
    get:
      operationId: getWorkspaceCurrentUser
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Bob:
                  $ref: '#/components/examples/BobWorkspace'
              schema:
                $ref: '#/components/schemas/User'
          description: the User details
        "404":
          description: the User specified is unknown or you don't have access to it
      summary: Get the details of an user with roles for a Workspace
      tags:
      - user
      x-accepts: application/json
  /oauth2/authorize:
    get:
      operationId: authorizeUser
      responses:
        "302":
          description: Redirection response
          headers:
            Location:
              examples:
                AzureAD:
                  $ref: '#/components/examples/AzureADRedirect'
              explode: false
              schema:
                type: string
              style: simple
      summary: Authorize an User with OAuth2. Delegated to configured OAuth2 service
      tags:
      - user
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios:
    get:
      operationId: findAllScenarios
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ThreeScenario:
                  $ref: '#/components/examples/ThreeScenarios'
              schema:
                items:
                  $ref: '#/components/schemas/Scenario'
                type: array
          description: the scenario details
      summary: List all Scenarios
      tags:
      - scenario
      x-accepts: application/json
    post:
      operationId: createScenario
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              MasterScenario:
                $ref: '#/components/examples/BreweryScenarioIn'
              ChildScenario:
                $ref: '#/components/examples/BreweryChildScenarioIn'
            schema:
              $ref: '#/components/schemas/Scenario'
        description: the Scenario to create
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Scenario:
                  $ref: '#/components/examples/BreweryScenario'
              schema:
                $ref: '#/components/schemas/Scenario'
          description: the scenario details
        "400":
          description: Bad request
      summary: Create a new scenario
      tags:
      - scenario
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/tree:
    get:
      operationId: getScenariosTree
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ScenariosTree:
                  $ref: '#/components/examples/ScenariosTree'
              schema:
                items:
                  $ref: '#/components/schemas/Scenario'
                type: array
          description: the scenario tree
      summary: Get the Scenarios Tree
      tags:
      - scenario
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}:
    delete:
      operationId: deleteScenario
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Scenario:
                  $ref: '#/components/examples/BreweryScenario'
              schema:
                $ref: '#/components/schemas/Scenario'
          description: the scenario details
        "400":
          description: Bad request
        "404":
          description: the Scenario specified is unknown or you don't have access
            to it
      summary: Delete a scenario
      tags:
      - scenario
      x-accepts: application/json
    get:
      operationId: findScenarioById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Scenario:
                  $ref: '#/components/examples/BreweryScenario'
              schema:
                $ref: '#/components/schemas/Scenario'
          description: the Scenario details
        "404":
          description: the Scenario specified is unknown or you don't have access
            to it
      summary: Get the details of an scenario
      tags:
      - scenario
      x-accepts: application/json
    patch:
      operationId: updateScenario
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryUpdate:
                $ref: '#/components/examples/BreweryScenarioUpdate'
            schema:
              $ref: '#/components/schemas/Scenario'
        description: the new Scenario details.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryUpdated:
                  $ref: '#/components/examples/BreweryScenarioUpdated'
              schema:
                $ref: '#/components/schemas/Scenario'
          description: the scenario details
        "400":
          description: Bad request
        "404":
          description: the Scenario specified is unknown or you don't have access
            to it
      summary: Update a scenario
      tags:
      - scenario
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/compare/{compared_scenario_id}:
    get:
      operationId: compareScenarios
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Workspace identifier
        explode: false
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Scenario identifier to compare to
        explode: false
        in: path
        name: compared_scenario_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryScenarioComparisonResult:
                  $ref: '#/components/examples/BreweryScenarioComparison'
              schema:
                $ref: '#/components/schemas/ScenarioComparisonResult'
          description: the comparison result for parameters values
        "404":
          description: the Scenario specified is unknown or you don't have access
            to it
      summary: Compare the Scenario with another one and returns the difference for
        parameters values
      tags:
      - scenario
      x-accepts: application/json
  /organizations/{organization_id}/datasets:
    get:
      operationId: findAllDatasets
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Two:
                  $ref: '#/components/examples/TwoDatasets'
              schema:
                items:
                  $ref: '#/components/schemas/Dataset'
                type: array
          description: the dataset details
      summary: List all Datasets
      tags:
      - dataset
      x-accepts: application/json
    post:
      operationId: createDataset
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryADT:
                $ref: '#/components/examples/BreweryADT'
            schema:
              $ref: '#/components/schemas/Dataset'
        description: the Dataset to create
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                BreweryADT:
                  $ref: '#/components/examples/BreweryADT'
              schema:
                $ref: '#/components/schemas/Dataset'
          description: the dataset details
        "400":
          description: Bad request
      summary: Create a new dataset
      tags:
      - dataset
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/datasets/copy:
    post:
      operationId: copyDataset
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryDatasetCopyParameters:
                $ref: '#/components/examples/BreweryDatasetCopyParameters'
            schema:
              $ref: '#/components/schemas/DatasetCopyParameters'
        description: the Dataset copy parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADT:
                  $ref: '#/components/examples/BreweryDatasetCopyParameters'
              schema:
                $ref: '#/components/schemas/DatasetCopyParameters'
          description: the Dataset copy operation parameters
        "400":
          description: Bad request
        "404":
          description: the Dataset specified is unknown or you don't have access to
            it
      summary: Copy a Dataset to another Dataset. Source must have a read capable
        connector and Target a write capable connector.
      tags:
      - dataset
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/datasets/{dataset_id}:
    delete:
      operationId: deleteDataset
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Dataset identifier
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADT:
                  $ref: '#/components/examples/BreweryADT'
              schema:
                $ref: '#/components/schemas/Dataset'
          description: the dataset details
        "400":
          description: Bad request
        "404":
          description: the Dataset specified is unknown or you don't have access to
            it
      summary: Delete a dataset
      tags:
      - dataset
      x-accepts: application/json
    get:
      operationId: findDatasetById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Dataset identifier
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADT:
                  $ref: '#/components/examples/BreweryADT'
              schema:
                $ref: '#/components/schemas/Dataset'
          description: the Dataset details
        "404":
          description: the Dataset specified is unknown or you don't have access to
            it
      summary: Get the details of a dataset
      tags:
      - dataset
      x-accepts: application/json
    patch:
      operationId: updateDataset
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Dataset identifier
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryADTUpdate:
                $ref: '#/components/examples/BreweryADTUpdate'
            schema:
              $ref: '#/components/schemas/Dataset'
        description: the new Dataset details.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADTUpdated:
                  $ref: '#/components/examples/BreweryADTUpdated'
              schema:
                $ref: '#/components/schemas/Dataset'
          description: the dataset details
        "400":
          description: Bad request
        "404":
          description: the Dataset specified is unknown or you don't have access to
            it
      summary: Update a dataset
      tags:
      - dataset
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/datasets/validators:
    get:
      operationId: findAllValidators
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Two:
                  $ref: '#/components/examples/OneValidator'
              schema:
                items:
                  $ref: '#/components/schemas/Validator'
                type: array
          description: the validator details
      summary: List all Validators
      tags:
      - validator
      x-accepts: application/json
    post:
      operationId: createValidator
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryADTValidator:
                $ref: '#/components/examples/BreweryADTValidator'
            schema:
              $ref: '#/components/schemas/Validator'
        description: the Validator to create
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                BreweryADTValidator:
                  $ref: '#/components/examples/BreweryADTValidator'
              schema:
                $ref: '#/components/schemas/Validator'
          description: the validator details
        "400":
          description: Bad request
      summary: Register a new validator
      tags:
      - validator
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/datasets/validators/{validator_id}:
    delete:
      operationId: deleteValidator
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Validator identifier
        explode: false
        in: path
        name: validator_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADTValidator:
                  $ref: '#/components/examples/BreweryADTValidator'
              schema:
                $ref: '#/components/schemas/Validator'
          description: the validator details
        "400":
          description: Bad request
        "404":
          description: the Validator specified is unknown or you don't have access
            to it
      summary: Delete a validator
      tags:
      - validator
      x-accepts: application/json
    get:
      operationId: findValidatorById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Validator identifier
        explode: false
        in: path
        name: validator_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADTValidator:
                  $ref: '#/components/examples/BreweryADTValidator'
              schema:
                $ref: '#/components/schemas/Validator'
          description: the Validator details
        "404":
          description: the Validator specified is unknown or you don't have access
            to it
      summary: Get the details of a validator
      tags:
      - validator
      x-accepts: application/json
  /organizations/{organization_id}/datasets/validators/{validator_id}/run:
    post:
      operationId: runValidator
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ValidatorRun identifier
        explode: false
        in: path
        name: validator_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryADTRunValidator:
                $ref: '#/components/examples/BreweryADTRunValidator'
            schema:
              $ref: '#/components/schemas/ValidatorRun'
        description: the Validator to run
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                BreweryADTValidatorRun:
                  $ref: '#/components/examples/BreweryADTValidatorRun'
              schema:
                $ref: '#/components/schemas/ValidatorRun'
          description: the validator run details
        "400":
          description: Bad request
      summary: Run a Validator
      tags:
      - validator
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/datasets/validators/{validator_id}/history:
    get:
      operationId: findAllValidatorRuns
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ValidatorRun identifier
        explode: false
        in: path
        name: validator_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Two:
                  $ref: '#/components/examples/ThreeValidatorRun'
              schema:
                items:
                  $ref: '#/components/schemas/ValidatorRun'
                type: array
          description: the validator run details
      summary: List all Validator Runs
      tags:
      - validator
      x-accepts: application/json
    post:
      operationId: createValidatorRun
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the ValidatorRun identifier
        explode: false
        in: path
        name: validator_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BreweryADTValidatorRun:
                $ref: '#/components/examples/BreweryADTValidatorRun'
            schema:
              $ref: '#/components/schemas/ValidatorRun'
        description: the Validator Run to create
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                BreweryADTValidatorRun:
                  $ref: '#/components/examples/BreweryADTValidatorRun'
              schema:
                $ref: '#/components/schemas/ValidatorRun'
          description: the validator run details
        "400":
          description: Bad request
      summary: Register a new validator run
      tags:
      - validator
      x-contentType: application/json
      x-accepts: application/json
  /organizations/{organization_id}/datasets/validators/{validator_id}/history/{validatorrun_id}:
    delete:
      operationId: deleteValidatorRun
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Validator identifier
        explode: false
        in: path
        name: validator_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Validator Run identifier
        explode: false
        in: path
        name: validatorrun_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADTValidatorRun:
                  $ref: '#/components/examples/BreweryADTValidatorRun'
              schema:
                $ref: '#/components/schemas/ValidatorRun'
          description: the validator run details
        "400":
          description: Bad request
        "404":
          description: the ValidatorRun specified is unknown or you don't have access
            to it
      summary: Delete a validator run
      tags:
      - validator
      x-accepts: application/json
    get:
      operationId: findValidatorRunById
      parameters:
      - description: the Organization identifier
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Validator identifier
        explode: false
        in: path
        name: validator_id
        required: true
        schema:
          type: string
        style: simple
      - description: the Validator Run identifier
        explode: false
        in: path
        name: validatorrun_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BreweryADTValidatorRun:
                  $ref: '#/components/examples/BreweryADTValidatorRun'
              schema:
                $ref: '#/components/schemas/ValidatorRun'
          description: the Validator Run details
        "404":
          description: the ValidatorRun specified is unknown or you don't have access
            to it
      summary: Get the details of a validator run
      tags:
      - validator
      x-accepts: application/json
components:
  examples:
    ADTConnector:
      description: ADT Connector example
      summary: ADT Connector
      value:
        id: "1"
        key: ADT Connector
        name: ADT Connector
        description: Connector for Azure Digital Twins. Read ADT and write the data
          in CSV for a ScenarioRun
        repository: azure-digital-twins-simulator-connector
        version: 1.0.0
        tags:
        - ADT
        ownerId: "1"
        url: https://github.com/Cosmo-Tech/azure-digital-twins-simulator-connector
        ioTypes:
        - read
        parameterGroups:
        - id: security
          label: Security
          parameters:
          - id: AZURE_TENANT_ID
            label: Azure Tenant Id
            valueType: string
            envVar: AZURE_TENANT_ID
          - id: AZURE_CLIENT_ID
            label: Azure Client Id
            valueType: string
            envVar: AZURE_CLIENT_ID
          - id: AZURE_CLIENT_SECRET
            label: Azure CLient secret
            valueType: password
            envVar: AZURE_CLIENT_SECRET
        - id: parameters
          label: Parameters
          parameters:
          - id: AZURE_DIGITAL_TWINS_URL
            label: Azure Digital Twins URL
            valueType: string
            envVar: AZURE_DIGITAL_TWINS_URL
          - id: ADT_QUERY
            label: Azure Digital Twins query
            valueType: string
            envVar: AZURE_DIGITAL_TWINS_QUERY
            default: SELECT * FROM digitaltwins
          - id: EXPORT_CSV_FILE_ABSOLUTE_PATH
            label: CSV file export absolute path
            valueType: string
            default: /mnt/scenariorun-data
            envVar: EXPORT_CSV_FILE_ABSOLUTE_PATH
    AzureADRedirect:
      description: authorize redirection to Azure Active Directory example
      summary: Azure AD redirect example
      value:
        Location: https://login.microsoftonline.com/e9641c78-d0d6-4d09-af63-168922724e7f/oauth2/v2.0/authorize?client_id=6731de76-14a6-49ae-97bc-6eba6914391e&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%2Fmyapp%2F&response_mode=query&scope=https%3A%2F%2Fgraph.microsoft.com%2Fmail.read
    Bob:
      description: Bob User example
      summary: Bob User
      value:
        id: "1"
        name: Bob
        platformRoles:
        - Admin
        organizations:
        - id: "1"
          name: Cosmo Tech
          roles:
          - Admin
          workspaces:
          - id: "1"
            name: Brewery Analysis
            roles:
            - Admin
        - id: "2"
          name: Phoenix
          roles:
          - Admin
    BobCreateIn:
      description: Bob User Create input example
      summary: Bob User Create input example
      value:
        name: Bob
        platformRoles:
        - Admin
    BobOrganization:
      description: Bob User for Organization 1 example
      summary: Bob User for an Organization example
      value:
        id: "1"
        name: Bob
        platformRoles:
        - Admin
        organizations:
        - id: "1"
          name: Cosmo Tech
          roles:
          - Admin
          workspaces:
          - id: "1"
            name: Brewery Analysis
            roles:
            - Admin
    BobWorkspace:
      description: Bob User for Organization 1 and Workspace 1 example
      summary: Bob User for a Workspace example
      value:
        id: "1"
        name: Bob
        platformRoles:
        - Admin
        organizations:
        - id: "1"
          name: Cosmo Tech
          roles:
          - Admin
          workspaces:
          - id: "1"
            name: Brewery Analysis
            roles:
            - Admin
    BobyUpdateIn:
      description: Bob User renamed to Boby input example
      summary: Boby update User input example
      value:
        id: "1"
        name: Boby
    BobyUpdated:
      description: Bob User renamed to Boby example
      summary: Boby updated User
      value:
        id: "1"
        name: Boby
        platformRoles:
        - Admin
        organizations:
        - id: "1"
          name: Cosmo Tech
          roles:
          - Admin
          workspaces:
          - id: "1"
            name: Brewery Analysis
            roles:
            - Admin
        - id: "2"
          name: Phoenix
          roles:
          - Admin
    Brewery:
      description: Brewery Solution example
      summary: Brewery Solution
      value:
        id: "1"
        key: Brewery Solution
        name: Brewery Solution
        description: "A Brewery Supplier Solution Model which simulate stock, production,\
          \ transport and customer satisfaction"
        repository: brewery_solution
        version: 1.0.0
        ownerId: "1"
        url: https://github.com/Cosm-Tech/brewery.git
        tags:
        - Brewery
        parameters:
        - id: prefix
          labels:
            fr: Prefix des noms
            en: Names prefix
          varType: string
        parameterGroups:
        - id: consumers
          labels:
            fr: Consommateurs
            en: Consumers
          parameters:
          - prefix
        run_templates:
        - id: hundred
          name: Full simulation 100 steps
          description: Run a full simulation with 100 steps
          csmSimulation: DeployedSimulation
          tags:
          - Full
          - Supply
          computeSize: highcpu
          parametersHandlerResource:
            storageType: local
            resourcePath: run_templates/hundred/parameters_handler/
          datasetValidatorResource:
            storageType: local
            resourcePath: run_templates/hundred/validator/
          engineResource:
            storageType: local
            resourcePath: run_templates/hundred/engine/
          datasetSchemaResource:
            storageType: local
            resourcePath: run_templates/hundred/schema
          parameterGroups:
          - consumers
    BreweryADT:
      description: Brewery Dataset in ADT example
      summary: Brewery ADT Dataset
      value:
        id: "1"
        name: Brewery ADT reference
        description: Brewery reference model in ADT
        tags:
        - ADT
        - Brewery
        - Reference
        connector:
          id: "1"
          name: ADT Connector
          version: 1.0.0
          ownerId: "1"
          parametersValues:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: "12345678"
            AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
        compatibility:
        - solutionKey: Brewery Solution
          minimumVersion: 1.0.0
    BreweryADTRunValidator:
      description: a Validator Run input for the Brewery Dataset from ADT in a Docker
        image
      summary: Brewery ADT Dataset Validator Run input
      value:
        datasetId: "1"
    BreweryADTUpdate:
      description: Brewery ADT reference model name update example
      summary: Brewery ADT name update example
      value:
        name: Brewery ADT new reference
    BreweryADTUpdated:
      description: Brewery Dataset in ADT name updated example
      summary: Brewery ADT updated Dataset
      value:
        id: "1"
        name: Brewery ADT new reference
        description: Brewery reference model in ADT
        tags:
        - ADT
        - Brewery
        - Reference
        connector:
          id: "1"
          name: ADT Connector
          version: 1.0.0
          ownerId: "1"
          parametersValues:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: "12345678"
            AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
        compatibility:
        - solutionKey: Brewery Solution
          minimumVersion: 1.0.0
    BreweryADTValidator:
      description: a Validator for the Brewery Dataset from ADT in a Docker image
      summary: Brewery ADT Dataset Validator
      value:
        id: "1"
        name: Brewery ADT Validator
        description: A Validator for the Brewery Dataset from ADT
        repository: brewery_adt_validator
        version: 1.0.0
        ownerId: "1"
        url: https://github.com/brewery-adt-validator
        tags:
        - Brewery
        - ADT
    BreweryADTValidatorRun:
      description: a Validator Run for the Brewery Dataset from ADT in a Docker image
      summary: Brewery ADT Dataset Validator Run
      value:
        id: 1
        validatorId: "1"
        validatorName: Brewery ADT Validator
        datasetId: "1"
        datasetName: Brewery ADT reference
        state: Finished
        containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa7
        logs: Validation ended with success\nBrewery ADT reference OK
    BreweryChildScenarioIn:
      description: Brewery Child Scenario input example
      summary: Brewery Child Scenario input example
      value:
        name: Brewery Child Analysis
        description: Brewery child reference analysis
        tags:
        - Brewery
        runTemplateId: "1"
        parentId: "1"
    BreweryDatasetCopyParameters:
      description: Parameters for Dataset copy from Dataset 1 to 2 example
      summary: Parameters for Dataset copy example
      value:
        sourceId: "1"
        targetId: "2"
    BreweryScenario:
      description: Brewery Scenario example
      summary: Brewery Scenario
      value:
        id: "1"
        name: Brewery Master Analysis
        description: Brewery master reference analysis
        tags:
        - Brewery
        - reference
        ownerId: "1"
        solutionId: "1"
        solutionName: Brewery Solution
        runTemplateId: "1"
        runTemplateName: Full simulation 100 steps
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Viewer
        state: Created
        ownerName: Bob
        creationDate: "4/15/2021, 10:52:21.593 AM"
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
    BreweryScenarioComparison:
      description: Brewery comparison result between a parent Scenario and its child
      summary: Brewery comparison result
      value:
        scenarioId: "1"
        comparedScenarioId: "2"
        changedValues:
        - parameterId: prefix
          varType: string
          value: Brewery Master Analysis
          comparedValue: Brewery Master Analysis 2021
    BreweryScenarioIn:
      description: Brewery Scenario input example
      summary: Brewery Scenario input example
      value:
        name: Brewery Master Analysis
        description: Brewery master reference analysis
        tags:
        - Brewery
        - reference
        runTemplateId: "1"
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Viewer
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
    BreweryScenarioRun:
      description: Brewery ScenarioRun example
      summary: Brewery ScenarioRun example
      value:
        id: "1"
        jobId: "1"
        ownerId: "1"
        workspaceId: "1"
        workspaceName: Brewery Analysis
        scenarioId: "1"
        scenarioName: Brewery Master Analysis
        solutionId: "1"
        solutionName: Brewery Solution
        solutionVersion: 1.0.0
        runTemplateId: hundred
        runTemplateName: Full scenariorun 100 steps
        computeSize: highcpu
        parametersHandler: run_templates/hundred/parameters_handler/
        datasetValidator: run_templates/hundred/validator/
        engine: run_templates/hundred/engine/
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: new
        sendInputToDataWarehouse: true
        dataWarehouseDB: Brewery
        resultsEventBusResourceUri: brewery
        scenariorunEventBusResourceUri: brewery-scenariorun
        state: Running
        starTime: "4/15/2021, 10:52:18.593 AM"
        nodeLabel: highcpupool
        fetchDatasetContainers:
        - id: azertyuiop
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
          image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
        fetchScenarioParametersContainer:
          id: aqwzsx
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_SCENARIO_ID: "1"
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: csmphoenix.azurecr.io/cosmotech-scenario-parameters-loader:latest
        applyParametersContainer:
          id: yhnujki
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_PARAMETERS_HANDLER_PROVIDER: local
            CSM_PARAMETERS_HANDLER_PATH: run_templates/hundred/parameters_handler/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - handle-parameters
        validateDataContainer:
          id: rfvtgb
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_VALIDATOR_PROVIDER: local
            CSM_DATASET_VALIDATOR_PATH: run_templates/hundred/validator/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - validate
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - -i
          - DeployedScenarioRun
          - --amqp-consumer
          - amqps://csm-phoenix.servicebus.windows.net/brewery
    BreweryScenarioRunContainer:
      description: Brewery ScenarioRun ran with containers information example
      summary: Brewery ScenarioRun Containers example
      value:
        id: "1"
        jobId: "1"
        ownerId: "1"
        state: Running
        starTime: "4/15/2021, 10:52:18.593 AM"
        nodeLabel: highcpupool
        fetchDatasetContainers:
        - id: azertyuiop
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
          image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - -i
          - DeployedScenarioRun
          - --amqp-consumer
          - amqps://csm-phoenix.servicebus.windows.net/brewery
    BreweryScenarioRunLogs:
      description: Brewery ScenarioRun logs with plain text example
      summary: Brewery ScenarioRun logs  example
      value:
        scenariorunId: "1"
        options:
          containerIds:
          - azertyuiop
          - wxcvbn
          plainText: false
        fetchDatasetContainers:
        - container:
            id: azertyuiop
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
              ADT_QUERY: SELECT * FROM digitaltwins
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
          computer: aks-highcpupool-30630301-vmss000000
          logs:
          - timeGenerated: "4/15/2021, 10:52:20.593 AM"
            entrySource: stderr
            logEntry: cannot read source file
          - timeGenerated: "4/15/2021, 10:52:21.593 AM"
            entrySource: stderr
            logEntry: stopping stream
        runLogs:
          container:
            id: wxcvbn
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_ENGINE_PROVIDER: local
              CSM_ENGINE_PATH: run_templates/hundred/engine/
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
              CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
            image: twinengines.azurecr.io/brewery_simulator:latest
            runArgs:
            - -i
            - DeployedScenarioRun
            - --amqp-consumer
            - amqps://csm-phoenix.servicebus.windows.net/brewery
          computer: aks-highcpupool-30630301-vmss000000
          logs:
          - timeGenerated: "4/15/2021, 10:52:22.593 AM"
            entrySource: stderr
            logEntry: cannot run solution
          - timeGenerated: "4/15/2021, 10:52:23.593 AM"
            entrySource: stderr
            logEntry: critical error
    BreweryScenarioRunLogsOptions:
      description: Brewery ScenarioRun logs options with plain text example
      summary: Brewery ScenarioRun logs options example
      value:
        containerIds:
        - azertyuiop
        - wxcvbn
        plainText: false
    BreweryScenarioRunSolution:
      description: Brewery ScenarioRun ran with Solution information example
      summary: Brewery ScenarioRun Solution example
      value:
        id: "1"
        jobId: "1"
        ownerId: "1"
        solutionId: "1"
        solutionName: Brewery Solution
        solutionVersion: 1.0.0
        runTemplateId: hundred
        runTemplateName: Full scenariorun 100 steps
        computeSize: highcpu
        parametersHandler: run_templates/hundred/parameters_handler/
        datasetValidator: run_templates/hundred/validator/
        engine: run_templates/hundred/engine/
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: new
        sendInputToDataWarehouse: true
        dataWarehouseDB: Brewery
        resultsEventBusResourceUri: brewery
        scenariorunEventBusResourceUri: brewery-scenariorun
        state: Running
        starTime: "4/15/2021, 10:52:18.593 AM"
        nodeLabel: highcpupool
        fetchDatasetContainers:
        - id: azertyuiop
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            CSM_DATASET_PATH: /mnt/scenariorun-data
          image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
        fetchScenarioParametersContainer:
          id: aqwzsx
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_SCENARIO_ID: "1"
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: csmphoenix.azurecr.io/cosmotech-scenario-parameters-loader:latest
        applyParametersContainer:
          id: yhnujki
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_PARAMETERS_HANDLER_PROVIDER: local
            CSM_PARAMETERS_HANDLER_PATH: run_templates/hundred/parameters_handler/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - handle-parameters
        validateDataContainer:
          id: rfvtgb
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_VALIDATOR_PROVIDER: local
            CSM_DATASET_VALIDATOR_PATH: run_templates/hundred/validator/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - validate
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - -i
          - DeployedScenarioRun
          - --amqp-consumer
          - amqps://csm-phoenix.servicebus.windows.net/brewery
    BreweryScenarioRunStart:
      description: Brewery start ScenarioRun for Scenario 1 example
      summary: Brewery start ScenarioRun for a Scenario example
      value:
        workspaceId: "1"
        scenarioId: "1"
    BreweryScenarioRunStartContainers:
      description: Brewery start ScenarioRun directly with containers example
      summary: Brewery start ScenarioRun directly with containers example
      value:
        nodeLabel: highcpupool
        fetchDatasetContainers:
        - id: azertyuiop
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
          image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - -i
          - DeployedScenarioRun
          - --amqp-consumer
          - amqps://csm-phoenix.servicebus.windows.net/brewery
    BreweryScenarioRunStartSolution:
      description: Brewery start ScenarioRun for Solution 1 example
      summary: Brewery start ScenarioRun for a Solution example
      value:
        solutionId: "1"
        runTemplateId: "1"
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: new
        sendInputToDataWarehouse: true
        dataWarehouseDB: Brewery
        resultsEventBusResourceUri: brewery
        scenariorunEventBusResourceUri: brewery-scenariorun
    BreweryScenarioUpdate:
      description: Update the Brewery Scenario by changing its name
      summary: Update the Brewery Scenario
      value:
        name: Brewery Master Analysis 2021
    BreweryScenarioUpdated:
      description: Brewery updated Scenario example
      summary: Brewery updated Scenario
      value:
        id: "1"
        name: Brewery Master Analysis 2021
        description: Brewery master reference analysis
        tags:
        - Brewery
        - reference
        ownerId: "1"
        solutionId: "1"
        solutionName: Brewery Solution
        runTemplateId: "1"
        runTemplateName: Full simulation 100 steps
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Viewer
        state: Created
        ownerName: Bob
        creationDate: "4/15/2021, 10:52:21.593 AM"
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
    BrewerySearch:
      description: Brewery search ScenarioRun of Workspace 1 in Running state example
      summary: Brewery search ScenarioRun example
      value:
        workspaceId: "1"
        state: Running
    BreweryUpdate:
      description: Brewery Solution update example
      summary: Brewery Solution update
      value:
        name: Brewery Solution 2021
    BreweryUpdated:
      description: Brewery Solution example
      summary: Brewery Solution
      value:
        id: "1"
        key: Brewery Solution
        name: Brewery Solution 2021
        description: "A Brewery Supplier Solution Model which simulate stock, production,\
          \ transport and customer satisfaction"
        repository: brewery_solution
        version: 1.0.0
        ownerId: "1"
        url: https://github.com/Cosm-Tech/brewery.git
        tags:
        - Brewery
        parameters:
        - id: prefix
          labels:
            fr: Prefix des noms
            en: Names prefix
          varType: string
        parameterGroups:
        - id: consumers
          labels:
            fr: Consommateurs
            en: Consumers
          parameters:
          - prefix
        run_templates:
        - id: hundred
          name: Full simulation 100 steps
          description: Run a full simulation with 100 steps
          csmSimulation: DeployedSimulation
          tags:
          - Full
          - Supply
          computeSize: highcpu
          parametersHandlerResource:
            storageType: local
            resourcePath: run_templates/hundred/parameters_handler/
          datasetValidatorResource:
            storageType: local
            resourcePath: run_templates/hundred/validator/
          engineResource:
            storageType: local
            resourcePath: run_templates/hundred/engine/
          datasetSchemaResource:
            storageType: local
            resourcePath: run_templates/hundred/schema
          parameterGroups:
          - consumers
    BreweryWorkspace:
      description: Brewery Workspace example
      summary: Brewery Workspace
      value:
        id: "1"
        name: Brewery Analysis
        description: "Brewery analysis for stock, production, transport and customer\
          \ satisfaction"
        version: 1.0.0
        tags:
        - Brewery
        ownerId: "1"
        solution:
          solutionId: "1"
          runTemplateFilter:
          - "1"
          defaultRunTemplateDataset:
            "1": "1"
        users:
        - id: "1"
          name: Bob
          roles:
          - Admin
        - id: "2"
          name: Alice
          roles:
          - Viewer
        webApp:
          url: https://brewery.app.cosmotech.com
          iframes:
            main: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
            dashboard: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U
          resultsEventBus:
            cloudService: AzureEventHub
            platformService: eventBusCluster
            baseUri: csm-phoenix.servicebus.windows.net
            resourceUri: brewery
          scenariorunEventBus:
            cloudService: AzureEventHub
            platformService: eventBusCluster
            baseUri: csm-phoenix.servicebus.windows.net
            resourceUri: brewery-scenariorun
          dataWarehouse:
            cloudService: AzureDataExplorer
            platformService: dataWarehouseCluster
            baseUri: https://phoenix.westeurope.kusto.windows.net
            resourceUri: Brewery
          storage:
            cloudService: AzureStorage
            platformService: storage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: organization-1/workspaces/1
    BreweryWorkspaceCreateIn:
      description: Brewery Workspace Create input parameters example
      summary: Brewery Workspace Create input parameters example
      value:
        name: Brewery Analysis
        description: "Brewery analysis for stock, production, transport and customer\
          \ satisfaction"
        version: 1.0.0
        tags:
        - Brewery
        solution:
          solutionId: "1"
          runTemplateFilter:
          - "1"
          defaultRunTemplateDataset:
            "1": "1"
        users:
        - id: "1"
          roles:
          - Admin
        - id: "2"
          roles:
          - Viewer
        webApp:
          url: https://brewery.app.cosmotech.com
          iframes:
            main: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
            dashboard: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
        services:
          resultsEventBus:
            platformService: eventBusCluster
            resourceUri: brewery
          scenariorunEventBus:
            platformService: eventBusCluster
            resourceUri: brewery-scenariorun
          dataWarehouse:
            platformService: dataWarehouseCluster
            resourceUri: Brewery
          storage:
            platformService: storage
            resourceUri: organization-1/workspaces/1
    BreweryWorkspaceFile:
      description: Brewery Workspace file uploaded return example
      summary: Brewery Workspace file example
      value:
        fileName: myData.csv
    BreweryWorkspaceUpdate:
      description: Update the Brewery Workspace by changing its name
      summary: Update the Brewery Workspace
      value:
        name: Brewery Analysis 2021
    BreweryWorkspaceUpdated:
      description: Brewery Workspace example
      summary: Brewery Workspace
      value:
        id: "1"
        name: Brewery Analysis 2021
        description: "Brewery analysis for stock, production, transport and customer\
          \ satisfaction"
        version: 1.0.0
        tags:
        - Brewery
        ownerId: "1"
        solution:
          solutionId: "1"
          runTemplateFilter:
          - "1"
          defaultRunTemplateDataset:
            "1": "1"
        users:
        - id: "1"
          name: Bob
          roles:
          - Admin
        - id: "2"
          name: Alice
          roles:
          - Viewer
        webApp:
          url: https://brewery.app.cosmotech.com
          iframes:
            main: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
            dashboard: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U
          resultsEventBus:
            cloudService: AzureEventHub
            platformService: eventBusCluster
            baseUri: csm-phoenix.servicebus.windows.net
            resourceUri: brewery
          scenariorunEventBus:
            cloudService: AzureEventHub
            platformService: eventBusCluster
            baseUri: csm-phoenix.servicebus.windows.net
            resourceUri: brewery-scenariorun
          dataWarehouse:
            cloudService: AzureDataExplorer
            platformService: dataWarehouseCluster
            baseUri: https://phoenix.westeurope.kusto.windows.net
            resourceUri: Brewery
          storage:
            cloudService: AzureStorage
            platformService: storage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: organization-1/workspaces/1
    CosmoOrganization:
      description: Cosmo Tech Organization example
      summary: Cosmo Tech Organization example
      value:
        id: "1"
        name: Cosmo Tech
        ownerId: "1"
        users:
        - id: "1"
          name: Bob
          roles:
          - Admin
        - id: "2"
          name: Alice
          roles:
          - User
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U
          storage:
            platformService: storage
            cloudService: AzureStorage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: organization-1/files
          solutionsContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: twinengines-1.azurecr.io
    CosmoTechPlatform:
      description: Cosmo Tech Platform example
      summary: Cosmo Tech Platform
      value:
        name: Cosmo Tech Platform
        description: Cosmo Tech Digital Twins Simulation Platform
        version: 1.0.0
        ownerId: "1"
        apiHost: api.cosmotech.com
        webAppUrl: https://app.cosmotech.com
        services:
          provider: Azure
          credentials:
            name: phoenix-core
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e8r
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278fu
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d4A
          storage:
            cloudService: AzureStorage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: core
          coreContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: csmphoenix.azurecr.io
          solutionsContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: twinengines.azurecr.io
          eventBusCluster:
            cloudService: AzureEventHub
            baseUri: csm-phoenix.servicebus.windows.net
          dataWarehouseCluster:
            cloudService: AzureDataExplorer
            baseUri: https://phoenix.westeurope.kusto.windows.net
            options:
              ingestionUri: https://ingest-phoenix.westeurope.kusto.windows.net
          databaseCluster:
            cloudService: AzureCosmosDB
            baseUri: https://cosmophoenix.documents.azure.com:443/
          keyVault:
            cloudService: AzureKeyVault
            baseUri: https://csmphoenixkeyvault.vault.azure.net/
          kubernetesCluster:
            cloudService: AzureKubernetesService
            baseUri: phoenixaks-phoenix-659096-de4a5810.hcp.westeurope.azmk8s.io
            resourceUri: phoenixAKS
          directory:
            cloudService: AzureActiveDirectory
            baseUri: thecosmocompany69.onmicrosoft.com
            options:
              tenantId: e9641c78-d0d6-4d09-af63-168922724e7f
          monitoring:
            cloudService: AzureMonitor
          analytic:
            resourceUri: csmphoenixinsights
            options:
              instrumentationKey: 05ef985d-8209-46db-acb0-d035da80faa1
              connectionString: InstrumentationKey=05ef985d-8209-46db-acb0-d035da80faa1;IngestionEndpoint=https://francecentral-0.in.applicationinsights.azure.com/
    CosmoTechPlatformUpdate:
      description: Update the Cosmo Tech Platform by changing its name
      summary: Update the Cosmo Tech Platform
      value:
        name: Cosmo Tech Platform for Azure
    CosmoTechPlatformUpdated:
      description: Cosmo Tech Platform updated example
      summary: Cosmo Tech Platform updated example
      value:
        name: Cosmo Tech Platform for Azure
        description: Cosmo Tech Digital Twins Simulation Platform
        version: 1.0.0
        ownerId: "1"
        apiHost: api.cosmotech.com
        webAppUrl: https://app.cosmotech.com
        services:
          provider: Azure
          credentials:
            name: phoenix-core
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e8r
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278fu
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d4A
          storage:
            cloudService: AzureStorage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: core
          coreContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: csmphoenix.azurecr.io
          solutionsContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: twinengines.azurecr.io
          eventBusCluster:
            cloudService: AzureEventHub
            baseUri: csm-phoenix.servicebus.windows.net
          dataWarehouseCluster:
            cloudService: AzureDataExplorer
            baseUri: https://phoenix.westeurope.kusto.windows.net
            options:
              ingestionUri: https://ingest-phoenix.westeurope.kusto.windows.net
          databaseCluster:
            cloudService: AzureCosmosDB
            baseUri: https://cosmophoenix.documents.azure.com:443/
          keyVault:
            cloudService: AzureKeyVault
            baseUri: https://csmphoenixkeyvault.vault.azure.net/
          kubernetesCluster:
            cloudService: AzureKubernetesService
            baseUri: phoenixaks-phoenix-659096-de4a5810.hcp.westeurope.azmk8s.io
            resourceUri: phoenixAKS
          directory:
            cloudService: AzureActiveDirectory
            baseUri: thecosmocompany69.onmicrosoft.com
            options:
              tenantId: e9641c78-d0d6-4d09-af63-168922724e7f
          monitoring:
            cloudService: AzureMonitor
          analytic:
            resourceUri: csmphoenixinsights
            options:
              instrumentationKey: 05ef985d-8209-46db-acb0-d035da80faa1
              connectionString: InstrumentationKey=05ef985d-8209-46db-acb0-d035da80faa1;IngestionEndpoint=https://francecentral-0.in.applicationinsights.azure.com/
    CosmoThreeUsers:
      description: Cosmo Tech Organization 3 users example
      summary: Cosmo Tech Organization with 3 users
      value:
        id: "1"
        name: Cosmo Tech
        ownerId: "1"
        users:
        - id: "1"
          name: Bob
          roles:
          - Admin
        - id: "2"
          name: Alice
          roles:
          - User
        - id: "3"
          name: Xavier
          roles:
          - Developer
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U
          storage:
            platformService: storage
            cloudService: AzureStorage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: organization-1/files
          solutionsContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: twinengines-1.azurecr.io
    NewOrganizationIn:
      description: Create a new organization with 2 users
      summary: Create a new organization
      value:
        name: Cosmo Tech
        users:
        - id: "1"
          roles:
          - Admin
        - id: "2"
          roles:
          - User
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U
          storage:
            platformService: storage
            resourceUri: organization-1/files
          solutionsContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: twinengines-1.azurecr.io
    OneConnector:
      description: One Connector list example
      summary: One Connector list
      value:
      - id: "1"
        key: ADT Connector
        name: ADT Connector
        description: Connector for Azure Digital Twins. Read ADT and write the data
          in CSV for a ScenarioRun
        repository: azure-digital-twins-simulator-connector
        version: 1.0.0
        tags:
        - ADT
        ownerId: "1"
        url: https://github.com/Cosmo-Tech/azure-digital-twins-simulator-connector
        ioTypes:
        - read
        parameterGroups:
        - id: security
          label: Security
          parameters:
          - id: AZURE_TENANT_ID
            label: Azure Tenant Id
            valueType: string
            envVar: AZURE_TENANT_ID
          - id: AZURE_CLIENT_ID
            label: Azure Client Id
            valueType: string
            envVar: AZURE_CLIENT_ID
          - id: AZURE_CLIENT_SECRET
            label: Azure CLient secret
            valueType: password
            envVar: AZURE_CLIENT_SECRET
        - id: parameters
          label: Parameters
          parameters:
          - id: AZURE_DIGITAL_TWINS_URL
            label: Azure Digital Twins URL
            valueType: string
            envVar: AZURE_DIGITAL_TWINS_URL
          - id: ADT_QUERY
            label: Azure Digital Twins query
            valueType: string
            envVar: AZURE_DIGITAL_TWINS_QUERY
            default: SELECT * FROM digitaltwins
          - id: EXPORT_CSV_FILE_ABSOLUTE_PATH
            label: CSV file export absolute path
            valueType: string
            default: /mnt/scenariorun-data
            envVar: EXPORT_CSV_FILE_ABSOLUTE_PATH
    OneScenarioRun:
      description: Brewery ScenarioRun list example
      summary: Brewery ScenarioRun list example
      value:
      - id: "1"
        jobId: "1"
        ownerId: "1"
        workspaceId: "1"
        workspaceName: Brewery Analysis
        scenarioId: "1"
        scenarioName: Brewery Master Analysis
        solutionId: "1"
        solutionName: Brewery Solution
        solutionVersion: 1.0.0
        runTemplateId: hundred
        runTemplateName: Full scenariorun 100 steps
        computeSize: highcpu
        state: Running
        starTime: "4/15/2021, 10:52:18.593 AM"
        nodeLabel: highcpupool
        fetchDatasetContainers:
        - id: azertyuiop
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
          image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
        fetchScenarioParametersContainer:
          id: aqwzsx
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_SCENARIO_ID: "1"
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: csmphoenix.azurecr.io/cosmotech-scenario-parameters-loader:latest
        applyParametersContainer:
          id: yhnujki
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_PARAMETERS_HANDLER_PROVIDER: local
            CSM_PARAMETERS_HANDLER_PATH: run_templates/hundred/parameters_handler/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - handle-parameters
        validateDataContainer:
          id: rfvtgb
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_VALIDATOR_PROVIDER: local
            CSM_DATASET_VALIDATOR_PATH: run_templates/hundred/validator/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - validate
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
          image: twinengines.azurecr.io/brewery_simulator:latest
          runArgs:
          - -i
          - DeployedScenarioRun
          - --amqp-consumer
          - amqps://csm-phoenix.servicebus.windows.net/brewery
    OneSolution:
      description: Brewery Solution example
      summary: Brewery Solution
      value:
      - id: "1"
        key: Brewery Solution
        name: Brewery Solution
        description: "A Brewery Supplier Solution Model which simulate stock, production,\
          \ transport and customer satisfaction"
        repository: brewery_solution
        version: 1.0.0
        ownerId: "1"
        url: https://github.com/Cosm-Tech/brewery.git
        tags:
        - Brewery
        parameters:
        - id: prefix
          labels:
            fr: Prefix des noms
            en: Names prefix
          varType: string
        parameterGroups:
        - id: consumers
          labels:
            fr: Consommateurs
            en: Consumers
          parameters:
          - prefix
        run_templates:
        - id: hundred
          name: Full simulation 100 steps
          description: Run a full simulation with 100 steps
          csmSimulation: DeployedSimulation
          tags:
          - Full
          - Supply
          computeSize: highcpu
          parametersHandlerResource:
            storageType: local
            resourcePath: run_templates/hundred/parameters_handler/
          datasetValidatorResource:
            storageType: local
            resourcePath: run_templates/hundred/validator/
          engineResource:
            storageType: local
            resourcePath: run_templates/hundred/engine/
          datasetSchemaResource:
            storageType: local
            resourcePath: run_templates/hundred/schema
          parameterGroups:
          - consumers
        - id: standard
          name: Standard Simulation
          description: Run the standard Simulation
          csmSimulation: DeployedSimulation
          tags:
          - Full
          - Supply
          computeSize: basic
    OneValidator:
      description: a Validator list with one element
      summary: Dataset Validator list
      value:
      - id: "1"
        name: Brewery ADT Validator
        description: A Validator for the Brewery Dataset from ADT
        repository: brewery_adt_validator
        version: 1.0.0
        ownerId: "1"
        url: https://github.com/brewery-adt-validator
        tags:
        - Brewery
        - ADT
    OneWorkspace:
      description: One Workspace list example
      summary: One Workspace list
      value:
      - id: "1"
        name: Brewery Analysis
        description: "Brewery analysis for stock, production, transport and customer\
          \ satisfaction"
        version: 1.0.0
        tags:
        - Brewery
        ownerId: "1"
        solution:
          solutionId: "1"
          runTemplateFilter:
          - "1"
          defaultRunTemplateDataset:
            "1": "1"
        users:
        - id: "1"
          name: Bob
          roles:
          - Admin
        - id: "2"
          name: Alice
          roles:
          - Viewer
        webApp:
          url: https://brewery.app.cosmotech.com
          iframes:
            main: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
            dashboard: https://app.powerbi.com/reportEmbed?reportId=05eee4e7-b301-4fb3-8850-9ef00f3516ef&autoAuth=true&ctid=e9641c78-d0d6-4d09-af63-168922724e7f&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWZyYW5jZS1jZW50cmFsLWEtcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U
          resultsEventBus:
            cloudService: AzureEventHub
            platformService: eventBusCluster
            baseUri: csm-phoenix.servicebus.windows.net
            resourceUri: brewery
          scenariorunEventBus:
            cloudService: AzureEventHub
            platformService: eventBusCluster
            baseUri: csm-phoenix.servicebus.windows.net
            resourceUri: brewery-scenariorun
          dataWarehouse:
            cloudService: AzureDataExplorer
            platformService: dataWarehouseCluster
            baseUri: https://phoenix.westeurope.kusto.windows.net
            resourceUri: Brewery
          storage:
            cloudService: AzureStorage
            platformService: storage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: organization-1/workspaces/1
    ScenariosTree:
      description: Scenarios Tree example with 1 master Scenario and 2 children
      summary: Scenarios Tree example
      value:
      - id: "1"
        name: Brewery Master Analysis
        description: Brewery master reference analysis
        version: 1.0.0
        tags:
        - Brewery
        - reference
        ownerId: "1"
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Viewer
        state: Created
        creationDate: "4/15/2021, 10:52:21.593 AM"
        ownerName: Alice
        runTemplateName: Full simulation 100 steps
        solutionName: Brewery Solution
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
          inherited: true
      - id: "2"
        name: Brewery Analysis name example
        description: Brewery analysis with example as name prefix
        tags:
        - Brewery
        - example
        parentId: "1"
        ownerId: "1"
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Viewer
        state: Running
        creationDate: "4/15/2021, 11:52:21.593 AM"
        ownerName: Alice
        runTemplateName: Full simulation 100 steps
        solutionName: Brewery Solution
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
          inherited: true
      - id: "3"
        name: Brewery Analysis name no change
        description: Brewery analysis with no change on name prefix
        tags:
        - Brewery
        parentId: "1"
        ownerId: "2"
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Editor
        state: Failed
        creationDate: "4/16/2021, 10:52:21.593 AM"
        ownerName: Alice
        runTemplateName: Full simulation 100 steps
        solutionName: Brewery Solution
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
          inherited: true
    ThreeScenarios:
      description: Three Scenarios with parent master Scenario and two children Scenarios
      summary: Three Scenarios with parent and children
      value:
      - id: "1"
        name: Brewery Master Analysis
        description: Brewery master reference analysis
        version: 1.0.0
        tags:
        - Brewery
        - reference
        ownerId: "1"
        solutionId: "1"
        solutionName: Brewery Solution
        runTemplateId: "1"
        runTemplateName: Full simulation 100 steps
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Viewer
        state: Created
        ownerName: Bob
        creationDate: "4/15/2021, 10:52:21.593 AM"
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
      - id: "2"
        name: Brewery Analysis name example
        description: Brewery analysis with example as name prefix
        tags:
        - Brewery
        - example
        parentId: "1"
        ownerId: "1"
        solutionId: "1"
        solutionName: Brewery Solution
        runTemplateId: "1"
        runTemplateName: Full simulation 100 steps
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Viewer
        state: Running
        ownerName: Bob
        creationDate: "4/15/2021, 11:52:21.593 AM"
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: example
      - id: "3"
        name: Brewery Analysis name no change
        description: Brewery analysis with no change on name prefix
        tags:
        - Brewery
        parentId: "1"
        ownerId: "2"
        solutionId: "1"
        solutionName: Brewery Solution
        runTemplateId: "1"
        runTemplateName: Full simulation 100 steps
        users:
        - id: "1"
          name: Bob
          roles: Editor
        - id: "2"
          name: Alice
          roles: Editor
        state: Failed
        ownerName: Alice
        creationDate: "4/16/2021, 11:52:21.593 AM"
        datasetList:
        - "1"
        parametersValues:
        - parameterId: prefix
          varType: string
          value: ""
          inherited: true
    ThreeValidatorRun:
      description: a list of Validator Run for the Brewery Dataset
      summary: Brewery ADT Dataset Validator Run list
      value:
      - id: "1"
        validatorId: "1"
        validatorName: Brewery ADT Validator
        datasetId: "1"
        datasetName: Brewery ADT reference
        state: Finished
        containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa7
        logs: Validation ended with success\nBrewery ADT reference OK
      - id: "2"
        validatorId: "1"
        validatorName: Brewery ADT Validator
        datasetId: "1"
        datasetName: Brewery ADT reference
        state: OnError
        containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa8
        logs: Validation ended with errors\nBrewery ADT reference KO
      - id: "3"
        validatorId: "1"
        validatorName: Brewery ADT Validator
        datasetId: "1"
        datasetName: Brewery ADT reference
        state: Running
        containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa9
        logs: none
    TwoDatasets:
      description: Two ADT Datasets example
      summary: Two Datasets example
      value:
      - id: "1"
        name: Brewery ADT reference
        description: Brewery reference model in ADT
        tags:
        - ADT
        - Brewery
        - Reference
        connector:
          id: "1"
          name: ADT Connector
          version: 1.0.0
          ownerId: "1"
          parametersValues:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: "12345678"
            AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
        compatibility:
        - solutionKey: Brewery Solution
          minimumVersion: 1.0.0
      - id: "2"
        name: Brewery ADT future
        description: Brewery future model in ADT
        tags:
        - ADT
        - Brewery
        connector:
          id: "1"
          name: ADT Connector
          version: 1.0.0
          ownerId: "1"
          parametersValues:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: "12345678"
            AZURE_DIGITAL_TWINS_URL: myotherdt.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
    TwoOrganizations:
      description: Two Organizations example
      summary: Two Orgnizations
      value:
      - id: "1"
        name: Cosmo Tech
        ownerId: "1"
        users:
        - id: "1"
          name: Bob
          roles:
          - Admin
        - id: "2"
          name: Alice
          roles:
          - User
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e7g
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278ef
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d3U
          storage:
            platformService: storage
            cloudService: AzureStorage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: organization-1/files
          solutionsContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: twinengines-1.azurecr.io
      - id: "2"
        name: Phoenix
        users:
        - id: "1"
          name: Bob
          roles:
          - Admin
        services:
          tenantCredentials:
            azureTenantId: e9641c78-d0d6-4d09-af63-168922724e8r
            azureClientId: 857bbfb2-ba5b-4482-92e4-bfdda9e278fu
            azureClientSecret: F6c6..s6CC9-Cu49u~R7_n8y.tCCy~4d4A
          storage:
            platformService: storage
            cloudService: AzureStorage
            baseUri: https://csmphoenix.blob.core.windows.net
            resourceUri: organization-2/files
          solutionsContainerRegistry:
            cloudService: AzureContainerRegistries
            baseUri: twinengines-2.azurecr.io
    TwoUsers:
      description: Two Users example
      summary: Two Users example
      value:
      - id: "1"
        name: Bob
        platformRoles:
        - Admin
        organizations:
        - id: "1"
          name: Cosmo Tech
          roles:
          - Admin
          workspaces:
          - id: "1"
            name: Brewery Analysis
            roles:
            - Admin
        - id: "2"
          name: Phoenix
          roles:
          - Admin
      - id: "2"
        name: Alice
        platformRoles:
        - User
        organizations:
        - id: "1"
          name: Cosmo Tech
          roles:
          - Admin
          workspaces:
          - id: "1"
            name: Brewery Analysis
            roles:
            - Admin
        - id: "2"
          name: Phoenix
          roles:
          - Admin
    WorkspaceFiles:
      description: Brewery Workspace files example
      summary: Brewery Workspace files example
      value:
      - fileName: myData.csv
      - fileName: myData2.csv
      - fileName: myData3.csv
  requestBodies:
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  schemas:
    Connector:
      description: a version of a Connector
      example:
        parameterGroups:
        - id: id
          label: label
          parameters:
          - default: default
            envVar: envVar
            valueType: valueType
            options:
            - options
            - options
            id: id
            label: label
          - default: default
            envVar: envVar
            valueType: valueType
            options:
            - options
            - options
            id: id
            label: label
        - id: id
          label: label
          parameters:
          - default: default
            envVar: envVar
            valueType: valueType
            options:
            - options
            - options
            id: id
            label: label
          - default: default
            envVar: envVar
            valueType: valueType
            options:
            - options
            - options
            id: id
            label: label
        ioTypes:
        - read
        - read
        name: name
        description: description
        id: id
        repository: repository
        ownerId: ownerId
        version: version
        key: key
        url: url
        tags:
        - tags
        - tags
      properties:
        id:
          description: the Connector version unique identifier
          readOnly: true
          type: string
        key:
          description: the Connector key which group Connector versions
          type: string
        name:
          description: the Connector name
          type: string
        description:
          description: the Connector description
          type: string
        repository:
          description: the registry repository containing the image
          type: string
        version:
          description: the Connector version MAJOR.MINOR.PATCH. Must be aligned with
            an existing repository tag
          type: string
        tags:
          description: the list of tags
          items:
            type: string
          type: array
        ownerId:
          description: the user id which own this connector version
          readOnly: true
          type: string
        url:
          description: an optional URL link to connector page
          type: string
        ioTypes:
          items:
            description: The read and write capabilities of connector
            enum:
            - read
            - write
            type: string
          type: array
        parameterGroups:
          description: the list of connector parameters groups
          items:
            $ref: '#/components/schemas/ConnectorParameterGroup'
          type: array
      required:
      - ioTypes
      - key
      - name
      - repository
      - version
      type: object
    ConnectorParameter:
      description: a connector parameter
      example:
        default: default
        envVar: envVar
        valueType: valueType
        options:
        - options
        - options
        id: id
        label: label
      properties:
        id:
          description: the connector parameter id
          type: string
        label:
          description: the list of translated parameter group labels
          type: string
        valueType:
          description: the parameter value type
          type: string
        options:
          description: the list of available and valid values for the parameter
          items:
            type: string
          type: array
        default:
          description: the default value
          type: string
        envVar:
          description: associated environment variable in connector image
          type: string
      required:
      - id
      - label
      - valueType
      type: object
    ConnectorParameterGroup:
      description: a connector parameters group
      example:
        id: id
        label: label
        parameters:
        - default: default
          envVar: envVar
          valueType: valueType
          options:
          - options
          - options
          id: id
          label: label
        - default: default
          envVar: envVar
          valueType: valueType
          options:
          - options
          - options
          id: id
          label: label
      properties:
        id:
          description: the connector parameter group id
          type: string
        label:
          description: the list of translated parameter group labels
          type: string
        parameters:
          description: the list of parameters
          items:
            $ref: '#/components/schemas/ConnectorParameter'
          type: array
      required:
      - id
      - label
      - parameters
      type: object
    Dataset:
      description: a Dataset
      example:
        connector:
          parametersValues:
            key: "{}"
          id: id
        name: name
        description: description
        validatorId: validatorId
        id: id
        fragmentsIds:
        - fragmentsIds
        - fragmentsIds
        ownerId: ownerId
        compatibility:
        - minimumVersion: minimumVersion
          maximumVersion: maximumVersion
          solutionKey: solutionKey
        - minimumVersion: minimumVersion
          maximumVersion: maximumVersion
          solutionKey: solutionKey
        tags:
        - tags
        - tags
      properties:
        id:
          description: the Dataset unique identifier
          readOnly: true
          type: string
        name:
          description: the Dataset name
          type: string
        description:
          description: the Dataset description
          type: string
        ownerId:
          description: the User id which own this Dataset
          readOnly: true
          type: string
        tags:
          description: the list of tags
          items:
            type: string
          type: array
        connector:
          $ref: '#/components/schemas/DatasetConnector'
        fragmentsIds:
          description: the list of other Datasets ids to compose as fragments
          items:
            type: string
          type: array
        validatorId:
          description: the validator id
          type: string
        compatibility:
          description: the list of compatible Solutions versions
          items:
            $ref: '#/components/schemas/DatasetCompatibility'
          type: array
      required:
      - connector
      - name
      type: object
    DatasetCompatibility:
      description: a Dataset compatibility constraint to a Solution version open range
      example:
        minimumVersion: minimumVersion
        maximumVersion: maximumVersion
        solutionKey: solutionKey
      properties:
        solutionKey:
          description: the Solution key which group Solution versions
          type: string
        minimumVersion:
          description: the Solution minimum version compatibility (version included)
          type: string
        maximumVersion:
          description: the Solution maximum version compatibility (version included)
          type: string
      required:
      - solutionKey
      type: object
    DatasetConnector:
      description: a Connector setup
      example:
        parametersValues:
          key: "{}"
        id: id
      properties:
        id:
          description: the Connector id
          type: string
        parametersValues:
          additionalProperties: true
          type: object
      required:
      - id
      type: object
    DatasetCopyParameters:
      description: the Dataset Copy Parameters
      example:
        sourceId: sourceId
        targetId: targetId
        options:
          key: "{}"
      properties:
        sourceId:
          description: the source Dataset id
          type: string
        targetId:
          description: the target Dataset id
          type: string
        options:
          additionalProperties: true
          description: freeform options to path to connectors
          type: object
      type: object
    Organization:
      description: an Organization
      example:
        name: name
        id: id
        services:
          solutionsContainerRegistry:
            platformService: platformService
            credentials:
              key: "{}"
            baseUri: baseUri
            resourceUri: resourceUri
            cloudService: cloudService
          tenantCredentials:
            key: "{}"
          storage:
            platformService: platformService
            credentials:
              key: "{}"
            baseUri: baseUri
            resourceUri: resourceUri
            cloudService: cloudService
        ownerId: ownerId
        users:
        - organizationId: organizationId
          roles:
          - Admin
          - Admin
          name: name
          id: id
        - organizationId: organizationId
          roles:
          - Admin
          - Admin
          name: name
          id: id
      properties:
        id:
          description: the Organization unique identifier
          readOnly: true
          type: string
        name:
          description: the Organization name
          type: string
        ownerId:
          description: the Owner User Id
          readOnly: true
          type: string
        users:
          items:
            $ref: '#/components/schemas/OrganizationUser'
          type: array
        services:
          $ref: '#/components/schemas/OrganizationServices'
      required:
      - name
      type: object
    OrganizationService:
      description: a cloud service resource
      example:
        platformService: platformService
        credentials:
          key: "{}"
        baseUri: baseUri
        resourceUri: resourceUri
        cloudService: cloudService
      properties:
        cloudService:
          description: the cloud service name
          type: string
        baseUri:
          description: the platform base uri for this service
          type: string
        platformService:
          description: the Platform service associated to the resource
          type: string
        resourceUri:
          description: the Organization specific uri for this service resource
          type: string
        credentials:
          additionalProperties: true
          description: a freeform credentials object. Structure depends on service
          type: object
      type: object
    OrganizationServices:
      description: the cloud service resources of the Organization
      example:
        solutionsContainerRegistry:
          platformService: platformService
          credentials:
            key: "{}"
          baseUri: baseUri
          resourceUri: resourceUri
          cloudService: cloudService
        tenantCredentials:
          key: "{}"
        storage:
          platformService: platformService
          credentials:
            key: "{}"
          baseUri: baseUri
          resourceUri: resourceUri
          cloudService: cloudService
      properties:
        tenantCredentials:
          additionalProperties: true
          description: a freeform credentials object for the Organization tenant.
            Structure depends on cloud provider
          type: object
        storage:
          $ref: '#/components/schemas/OrganizationService'
        solutionsContainerRegistry:
          $ref: '#/components/schemas/OrganizationService'
      type: object
    OrganizationUser:
      description: a User
      example:
        organizationId: organizationId
        roles:
        - Admin
        - Admin
        name: name
        id: id
      properties:
        id:
          description: "the User unique identifier, in response"
          readOnly: true
          type: string
        name:
          description: the User name
          type: string
        organizationId:
          description: the Organization Id context
          readOnly: true
          type: string
        roles:
          description: the User's roles for the Organization
          items:
            enum:
            - Admin
            - User
            - Viewer
            - Developer
            type: string
          type: array
      required:
      - name
      - roles
      type: object
    Platform:
      description: a Platform
      example:
        webAppUrl: webAppUrl
        apiHost: apiHost
        name: name
        description: description
        services:
          keyVault:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          credentials:
            key: "{}"
          kubernetesCluster:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          databaseCluster:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          storage:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          monitoring:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          directory:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          eventBusCluster:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          coreContainerRegistry:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          solutionsContainerRegistry:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          provider: Azure
          dataWarehouseCluster:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
          analytic:
            credentials:
              key: "{}"
            baseUri: baseUri
            options:
              key: "{}"
            resourceUri: resourceUri
            cloudService: cloudService
        ownerId: ownerId
        version: version
      properties:
        name:
          description: the Platform name
          type: string
        description:
          description: the Platform description
          type: string
        version:
          description: the Platform version MAJOR.MINOR.PATCH.
          type: string
        ownerId:
          description: the Platform owner Id
          type: string
        apiHost:
          description: Platform host name
          type: string
        webAppUrl:
          description: the Web Application Portal to use the Platform
          type: string
        services:
          $ref: '#/components/schemas/PlatformServices'
      required:
      - name
      - ownerId
      - services
      - version
      type: object
    PlatformService:
      description: a Cloud Service resource
      example:
        credentials:
          key: "{}"
        baseUri: baseUri
        options:
          key: "{}"
        resourceUri: resourceUri
        cloudService: cloudService
      properties:
        cloudService:
          description: the cloud service name
          readOnly: true
          type: string
        baseUri:
          description: the platform base uri for this service
          readOnly: true
          type: string
        resourceUri:
          description: the workspace specific uri for this service resource
          type: string
        credentials:
          additionalProperties: true
          description: a freeform credentials object. Structure depends on service
          type: object
        options:
          additionalProperties: true
          description: the service specific options
          type: object
      type: object
    PlatformServices:
      description: the list of Platform services
      example:
        keyVault:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        credentials:
          key: "{}"
        kubernetesCluster:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        databaseCluster:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        storage:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        monitoring:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        directory:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        eventBusCluster:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        coreContainerRegistry:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        solutionsContainerRegistry:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        provider: Azure
        dataWarehouseCluster:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
        analytic:
          credentials:
            key: "{}"
          baseUri: baseUri
          options:
            key: "{}"
          resourceUri: resourceUri
          cloudService: cloudService
      properties:
        provider:
          description: the Cloud Provider for the services
          enum:
          - Azure
          type: string
        credentials:
          additionalProperties: true
          description: a freeform credentials object for the Platform. Structure depends
            on cloud provider
          type: object
        storage:
          $ref: '#/components/schemas/PlatformService'
        coreContainerRegistry:
          $ref: '#/components/schemas/PlatformService'
        solutionsContainerRegistry:
          $ref: '#/components/schemas/PlatformService'
        eventBusCluster:
          $ref: '#/components/schemas/PlatformService'
        dataWarehouseCluster:
          $ref: '#/components/schemas/PlatformService'
        databaseCluster:
          $ref: '#/components/schemas/PlatformService'
        keyVault:
          $ref: '#/components/schemas/PlatformService'
        kubernetesCluster:
          $ref: '#/components/schemas/PlatformService'
        directory:
          $ref: '#/components/schemas/PlatformService'
        monitoring:
          $ref: '#/components/schemas/PlatformService'
        analytic:
          $ref: '#/components/schemas/PlatformService'
      required:
      - provider
      type: object
    RunTemplate:
      description: a Solution Run Template
      example:
        preRunResource:
          customUri: customUri
          resourcePath: resourcePath
          storageType: local
        parametersHandlerResource:
          customUri: customUri
          resourcePath: resourcePath
          storageType: local
        datasetValidatorResource:
          customUri: customUri
          resourcePath: resourcePath
          storageType: local
        sendDatasetsToDataWarehouse: true
        description: description
        computeSize: computeSize
        csmSimulation: csmSimulation
        tags:
        - tags
        - tags
        parameterGroups:
        - parameterGroups
        - parameterGroups
        name: name
        engineResource:
          customUri: customUri
          resourcePath: resourcePath
          storageType: local
        postRunResource:
          customUri: customUri
          resourcePath: resourcePath
          storageType: local
        id: id
        sendInputParametersToDataWarehouse: true
      properties:
        id:
          description: the Solution Run Template id
          type: string
        name:
          description: the Run Template name
          type: string
        description:
          description: the Run Template description
          type: string
        csmSimulation:
          description: the Cosmo Tech simulation name. This information is send to
            the Engine. Mandatory information if no Engine is defined
          type: string
        tags:
          description: the list of Run Template tags
          items:
            type: string
          type: array
        computeSize:
          description: the compute size needed for this Run Template. Standard sizes
            are basic and highcpu. Default is basic
          type: string
        parametersHandlerResource:
          $ref: '#/components/schemas/RunTemplateResourceStorage'
        datasetValidatorResource:
          $ref: '#/components/schemas/RunTemplateResourceStorage'
        preRunResource:
          $ref: '#/components/schemas/RunTemplateResourceStorage'
        engineResource:
          $ref: '#/components/schemas/RunTemplateResourceStorage'
        postRunResource:
          $ref: '#/components/schemas/RunTemplateResourceStorage'
        sendDatasetsToDataWarehouse:
          default: true
          description: whether or not the Datasets values are send to the DataWarehouse
            prior to Simulation Run
          type: boolean
        sendInputParametersToDataWarehouse:
          default: true
          description: whether or not the input parameters values are send to the
            DataWarehouse prior to Simulation Run
          type: boolean
        parameterGroups:
          description: the ordered list of parameters groups for the Run Template
          items:
            description: a Run Template Group Parameter id
            type: string
          type: array
      required:
      - id
      - name
      type: object
    RunTemplateParameter:
      description: a Run Template Parameter
      example:
        varType: varType
        options:
          key: "{}"
        id: id
        labels:
          key: "{}"
      properties:
        id:
          description: the Parameter id
          type: string
        labels:
          additionalProperties: true
          description: a translated label with key as ISO 639-1 code
          type: object
        varType:
          description: the variable type for the parameter. Basic types or special
            type %DATASETID%
          type: string
        options:
          additionalProperties: true
          description: freeform options
          type: object
      required:
      - id
      - labels
      - varType
      type: object
    RunTemplateParameterGroup:
      description: a Parameter Group for a Run Template
      example:
        options:
          key: "{}"
        id: id
        isTable: true
        parameters:
        - parameters
        - parameters
        parentId: parentId
        labels:
          key: "{}"
      properties:
        id:
          description: the Parameter Group id
          type: string
        labels:
          additionalProperties: true
          description: a translated label with key as ISO 639-1 code
          type: object
        isTable:
          description: does the group define a table
          type: boolean
        options:
          additionalProperties: true
          description: freeform options
          type: object
        parentId:
          description: the Run Template Group parent Id
          type: string
        parameters:
          description: an ordered list of Run Template Parameters
          items:
            description: a Run Template Parameter id
            type: string
          type: array
      required:
      - id
      - labels
      - parameters
      type: object
    RunTemplateParameterValue:
      description: the value of Analysis parameter for a Scenario for this ScenarioRun
      example:
        varType: varType
        parameterId: parameterId
        value: value
      properties:
        parameterId:
          description: the parameter Id
          type: string
        varType:
          description: the parameter value type
          readOnly: true
          type: string
        value:
          description: the parameter value
          type: string
      required:
      - parameterId
      - value
      type: object
    RunTemplateResourceStorage:
      example:
        customUri: customUri
        resourcePath: resourcePath
        storageType: local
      properties:
        storageType:
          description: "the storage type. Use ${CSM_PROJECT_PATH} or ${CSM_STORAGE_SIMULATOR}\
            \ behind the scene"
          enum:
          - local
          - cloud
          - customUri
          type: string
        resourcePath:
          description: the resource path
          type: string
        customUri:
          description: a custom Uri to provide the resource in resourcePath
          type: string
      required:
      - resourcePath
      - storageType
      type: object
    Scenario:
      description: a Scenario with base information
      example:
        solutionName: solutionName
        description: description
        runTemplateName: runTemplateName
        ownerId: ownerId
        creationDate: creationDate
        parentId: parentId
        users:
        - roles: Viewer
          name: name
          id: id
        - roles: Viewer
          name: name
          id: id
        tags:
        - tags
        - tags
        parametersValues:
        - varType: varType
          parameterId: parameterId
          isInherited: isInherited
          value: value
        - varType: varType
          parameterId: parameterId
          isInherited: isInherited
          value: value
        ownerName: ownerName
        name: name
        runTemplateId: runTemplateId
        id: id
        solutionId: solutionId
        state: Created
        datasetList:
        - datasetList
        - datasetList
      properties:
        id:
          description: the Scenario unique identifier
          readOnly: true
          type: string
        name:
          description: the Scenario name
          type: string
        description:
          description: the Scenario description
          type: string
        tags:
          description: the list of tags
          items:
            type: string
          type: array
        parentId:
          description: the Scenario parent id
          type: string
        ownerId:
          description: the user id which own this Scenario
          readOnly: true
          type: string
        solutionId:
          description: the Solution Id associated with this Scenario
          readOnly: true
          type: string
        runTemplateId:
          description: the Solution Run Template Id associated with this Scenario
          type: string
        users:
          description: the list of users Id with their role
          items:
            $ref: '#/components/schemas/ScenarioUser'
          type: array
        state:
          description: the Scenario state
          enum:
          - Created
          - Running
          - Successful
          - Failed
          readOnly: true
          type: string
        creationDate:
          description: the Scenario creation date
          readOnly: true
          type: string
        ownerName:
          description: the name of the owner
          readOnly: true
          type: string
        solutionName:
          description: the Solution name
          readOnly: true
          type: string
        runTemplateName:
          description: the Solution Run Template name associated with this Scenario
          readOnly: true
          type: string
        datasetList:
          description: the list of Dataset Id associated to this Scenario Run Template
          items:
            type: string
          type: array
        parametersValues:
          description: the list of Solution Run Template parameters values
          items:
            $ref: '#/components/schemas/ScenarioRunTemplateParameterValue'
          type: array
      required:
      - name
      type: object
    ScenarioChangedParameterValue:
      description: the difference between the values of a parameter
      example:
        varType: varType
        parameterId: parameterId
        comparedValue: comparedValue
        value: value
      properties:
        parameterId:
          description: the parameter id the values refer to
          readOnly: true
          type: string
        varType:
          description: the parameter value type
          readOnly: true
          type: string
        value:
          description: the parameter value for the reference Scenario
          readOnly: true
          type: string
        comparedValue:
          description: the parameter value for the compared Scenario
          readOnly: true
          type: string
      type: object
    ScenarioComparisonResult:
      description: the result of the comparison of two scenarios
      example:
        changedValues:
        - varType: varType
          parameterId: parameterId
          comparedValue: comparedValue
          value: value
        - varType: varType
          parameterId: parameterId
          comparedValue: comparedValue
          value: value
        comparedScenarioId: comparedScenarioId
        scenarioId: scenarioId
      properties:
        scenarioId:
          description: the Scenario Id which is the reference for the comparison
          readOnly: true
          type: string
        comparedScenarioId:
          description: the Scenario Id the reference Scenario is compared to
          readOnly: true
          type: string
        changedValues:
          description: the list of changed values for parameters
          items:
            $ref: '#/components/schemas/ScenarioChangedParameterValue'
          readOnly: true
          type: array
      type: object
    ScenarioRun:
      description: a ScenarioRun with only base properties
      example:
        applyParametersContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        failedStep: failedStep
        resultsEventBusResourceUri: resultsEventBusResourceUri
        computeSize: computeSize
        ownerId: ownerId
        solutionVersion: solutionVersion
        parametersValues:
        - varType: varType
          parameterId: parameterId
          value: value
        - varType: varType
          parameterId: parameterId
          value: value
        fetchDatasetContainers:
        - image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        - image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        dataWarehouseDB: dataWarehouseDB
        runContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        postRunContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        workspaceName: workspaceName
        startTime: startTime
        id: id
        state: FetchingDatasets
        preRunContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        failedContainerId: failedContainerId
        scenarioName: scenarioName
        validateDataContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        workspaceId: workspaceId
        sendDataWarehouseContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        solutionName: solutionName
        runTemplateName: runTemplateName
        fetchScenarioParametersContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        jobId: jobId
        runTemplateId: runTemplateId
        scenariorunEventBusResourceUri: scenariorunEventBusResourceUri
        solutionId: solutionId
        endTime: endTime
        datasetList:
        - datasetList
        - datasetList
        scenarioId: scenarioId
        sendInputToDataWarehouse: true
        nodeLabel: nodeLabel
      properties:
        id:
          description: the ScenarioRun
          readOnly: true
          type: string
        jobId:
          description: the Platform compute cluster Job Id
          readOnly: true
          type: string
        ownerId:
          description: the user id which own this scenariorun
          readOnly: true
          type: string
        workspaceId:
          description: the Workspace Id
          readOnly: true
          type: string
        workspaceName:
          description: the Workspace name
          readOnly: true
          type: string
        scenarioId:
          description: the Scenario Id
          readOnly: true
          type: string
        scenarioName:
          description: the Scenario name
          readOnly: true
          type: string
        solutionId:
          description: the Solution Id
          readOnly: true
          type: string
        solutionName:
          description: the Solution name
          readOnly: true
          type: string
        solutionVersion:
          description: the Solution version
          readOnly: true
          type: string
        runTemplateId:
          description: the Solution Run Template id
          readOnly: true
          type: string
        runTemplateName:
          description: the Run Template name
          readOnly: true
          type: string
        computeSize:
          description: the compute size needed for this Analysis. Standard sizes are
            basic and highcpu. Default is basic
          readOnly: true
          type: string
        state:
          description: the ScenarioRun state
          enum:
          - FetchingDatasets
          - FetchingScenarioParameters
          - ApplyingScenarioParameters
          - ValidatingScenarioData
          - SendingScenarioDataToDataWarehouse
          - PreRun
          - Running
          - PostRun
          - Success
          - Failed
          readOnly: true
          type: string
        failedStep:
          description: the failed step if state is Failed
          readOnly: true
          type: string
        failedContainerId:
          description: the failed container Id if state is Failed
          readOnly: true
          type: string
        startTime:
          description: the ScenarioRun start Date Time
          readOnly: true
          type: string
        endTime:
          description: the ScenarioRun end Date Time
          readOnly: true
          type: string
        datasetList:
          description: the list of Dataset Id associated to this Analysis
          items:
            type: string
          readOnly: true
          type: array
        parametersValues:
          description: the list of Run Template parameters values
          items:
            $ref: '#/components/schemas/RunTemplateParameterValue'
          readOnly: true
          type: array
        sendInputToDataWarehouse:
          description: whether or not the Dataset values and the input parameters
            values are send to the DataWarehouse prior to ScenarioRun Run
          readOnly: true
          type: boolean
        dataWarehouseDB:
          description: the DataWarehouse database name to send data if sendInputToDataWarehouse
            is set
          type: string
        resultsEventBusResourceUri:
          description: the event bus which receive Workspace ScenarioRun results messages.
            Message won't be send if this is not set
          type: string
        scenariorunEventBusResourceUri:
          description: the event bus which receive Workspace ScenarioRun events messages.
            Message won't be send if this is not set
          type: string
        nodeLabel:
          description: the node label request
          readOnly: true
          type: string
        fetchDatasetContainers:
          description: the containers which fetch the Scenario Datasets
          items:
            $ref: '#/components/schemas/ScenarioRunContainer'
          readOnly: true
          type: array
        fetchScenarioParametersContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        applyParametersContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        validateDataContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        sendDataWarehouseContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        preRunContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        runContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        postRunContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
      type: object
    ScenarioRunContainer:
      description: a ScenarioRun container description
      example:
        image: image
        runArgs:
        - runArgs
        - runArgs
        envVars:
          key: "{}"
        id: id
      properties:
        id:
          description: the container Id
          readOnly: true
          type: string
        envVars:
          additionalProperties: true
          description: a freeform environment variable map
          type: object
        image:
          description: the container image URI
          type: string
        runArgs:
          description: the list of run arguments for the container
          items:
            type: string
          type: array
      type: object
    ScenarioRunContainerLog:
      description: a container log line
      example:
        timeGenerated: timeGenerated
        entrySource: entrySource
        logEntry: logEntry
      properties:
        timeGenerated:
          description: date and time the record was created
          readOnly: true
          type: string
        entrySource:
          description: source of the log line. Possible values are stdout or stderr
          readOnly: true
          type: string
        logEntry:
          description: actual log line
          readOnly: true
          type: string
      type: object
    ScenarioRunContainerLogs:
      description: logs for a given container
      example:
        container:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        computer: computer
        textLog: textLog
        logs:
        - timeGenerated: timeGenerated
          entrySource: entrySource
          logEntry: logEntry
        - timeGenerated: timeGenerated
          entrySource: entrySource
          logEntry: logEntry
      properties:
        container:
          $ref: '#/components/schemas/ScenarioRunContainer'
        computer:
          description: computer/node that's generating the log
          readOnly: true
          type: string
        logs:
          description: the list of container logs in structured format
          items:
            $ref: '#/components/schemas/ScenarioRunContainerLog'
          readOnly: true
          type: array
        textLog:
          description: the plain text log if plainText option has been set
          type: string
      type: object
    ScenarioRunLogs:
      description: the scenariorun logs returned by all containers
      example:
        fetchDatasetLogs:
        - container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        - container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        validateDataLogs:
          container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        runLogs:
          container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        scenariorunId: scenariorunId
        options:
          containerIds:
          - containerIds
          - containerIds
          plainText: true
        applyParametersLogs:
          container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        fetchScenarioParametersLog:
          container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        sendDataWarehouseLogs:
          container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        preRunLogs:
          container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
        postRunLogs:
          container:
            image: image
            runArgs:
            - runArgs
            - runArgs
            envVars:
              key: "{}"
            id: id
          computer: computer
          textLog: textLog
          logs:
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
          - timeGenerated: timeGenerated
            entrySource: entrySource
            logEntry: logEntry
      properties:
        scenariorunId:
          description: the ScenarioRun Id
          readOnly: true
          type: string
        options:
          $ref: '#/components/schemas/ScenarioRunLogsOptions'
        fetchDatasetLogs:
          description: logs for the containers which fetch the Scenario Datasets
          items:
            $ref: '#/components/schemas/ScenarioRunContainerLogs'
          readOnly: true
          type: array
        fetchScenarioParametersLog:
          $ref: '#/components/schemas/ScenarioRunContainerLogs'
        applyParametersLogs:
          $ref: '#/components/schemas/ScenarioRunContainerLogs'
        validateDataLogs:
          $ref: '#/components/schemas/ScenarioRunContainerLogs'
        sendDataWarehouseLogs:
          $ref: '#/components/schemas/ScenarioRunContainerLogs'
        preRunLogs:
          $ref: '#/components/schemas/ScenarioRunContainerLogs'
        runLogs:
          $ref: '#/components/schemas/ScenarioRunContainerLogs'
        postRunLogs:
          $ref: '#/components/schemas/ScenarioRunContainerLogs'
      type: object
    ScenarioRunLogsOptions:
      description: the scenariorun logs options
      example:
        containerIds:
        - containerIds
        - containerIds
        plainText: true
      properties:
        containerIds:
          description: the list of container Id to get the log for
          items:
            type: string
          type: array
        plainText:
          description: whether or not to return the log in plain text instead of structured
            form
          type: boolean
      type: object
    ScenarioRunSearch:
      description: the search options
      example:
        jobId: jobId
        runTemplateId: runTemplateId
        solutionId: solutionId
        state: FetchingDatasets
        ownerId: ownerId
        scenarioId: scenarioId
        workspaceId: workspaceId
      properties:
        solutionId:
          description: the Solution Id to search
          type: string
        runTemplateId:
          description: the Solution Analysis Id to search
          type: string
        workspaceId:
          description: the Workspace Id to search
          type: string
        scenarioId:
          description: the Scenario Id to search
          type: string
        state:
          description: the state to search
          enum:
          - FetchingDatasets
          - FetchingScenarioParameters
          - ApplyingScenarioParameters
          - ValidatingScenarioData
          - SendingScenarioDataToDataWarehouse
          - PreRun
          - Running
          - PostRun
          - Success
          - Failed
          type: string
        jobId:
          description: the Cosmo Tech compute cluster Job Id to search
          type: string
        ownerId:
          description: the owner Id to search
          type: string
      type: object
    ScenarioRunStart:
      description: the parameters to run a Scenario
      example:
        scenarioId: scenarioId
        workspaceId: workspaceId
      properties:
        workspaceId:
          description: the Workspace Id
          type: string
        scenarioId:
          description: the Scenario Id
          type: string
      type: object
    ScenarioRunStartContainers:
      description: the parameters to run directly containers
      example:
        applyParametersContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        sendDataWarehouseContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        fetchDatasetContainers:
        - image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        - image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        runContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        postRunContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        fetchScenarioParametersContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        preRunContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
        nodeLabel: nodeLabel
        validateDataContainer:
          image: image
          runArgs:
          - runArgs
          - runArgs
          envVars:
            key: "{}"
          id: id
      properties:
        nodeLabel:
          description: the node label request
          type: string
        fetchDatasetContainers:
          description: the containers which fetch the Scenario Datasets
          items:
            $ref: '#/components/schemas/ScenarioRunContainer'
          readOnly: true
          type: array
        fetchScenarioParametersContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        applyParametersContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        validateDataContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        sendDataWarehouseContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        preRunContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        runContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
        postRunContainer:
          $ref: '#/components/schemas/ScenarioRunContainer'
      type: object
    ScenarioRunStartSolution:
      description: the parameters to run directly a Solution
      example:
        parametersValues:
        - varType: varType
          parameterId: parameterId
          value: value
        - varType: varType
          parameterId: parameterId
          value: value
        dataWarehouseDB: dataWarehouseDB
        resultsEventBusResourceUri: resultsEventBusResourceUri
        runTemplateId: runTemplateId
        scenariorunEventBusResourceUri: scenariorunEventBusResourceUri
        solutionId: solutionId
        datasetList:
        - datasetList
        - datasetList
        sendInputToDataWarehouse: true
      properties:
        solutionId:
          description: the Solution Id
          type: string
        runTemplateId:
          description: the Solution Run Template id
          type: string
        datasetList:
          description: the list of Dataset Id associated to this Analysis
          items:
            type: string
          type: array
        parametersValues:
          description: the list of Solution Run Template parameters values
          items:
            $ref: '#/components/schemas/RunTemplateParameterValue'
          type: array
        sendInputToDataWarehouse:
          description: whether or not the Dataset values and the input parameters
            values are send to the DataWarehouse prior to ScenarioRun Run
          type: boolean
        dataWarehouseDB:
          description: the DataWarehouse database name to send data if sendInputToDataWarehouse
            is set
          type: string
        resultsEventBusResourceUri:
          description: the event bus which receive Workspace ScenarioRun results messages.
            Message won't be send if this is not set
          type: string
        scenariorunEventBusResourceUri:
          description: the event bus which receive Workspace ScenarioRun events messages.
            Message won't be send if this is not set
          type: string
      type: object
    ScenarioRunTemplateParameterValue:
      description: the value of a Solution Run Template parameter for a Scenario
      example:
        varType: varType
        parameterId: parameterId
        isInherited: isInherited
        value: value
      properties:
        parameterId:
          description: the parameter Id
          type: string
        varType:
          description: the parameter value type
          readOnly: true
          type: string
        value:
          description: the parameter value
          type: string
        isInherited:
          description: whether or not the value is inherited from parent or has been
            changed
          type: string
      required:
      - parameterId
      - value
      type: object
    ScenarioUser:
      description: a Scenario user with roles
      example:
        roles: Viewer
        name: name
        id: id
      properties:
        id:
          description: the User id
          type: string
        name:
          description: the User name
          readOnly: true
          type: string
        roles:
          description: the User role
          enum:
          - Viewer
          - Editor
          type: string
      required:
      - id
      - roles
      type: object
    Solution:
      description: a version of a Solution
      example:
        description: description
        csmSimulator: csmSimulator
        run_templates:
        - preRunResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          parametersHandlerResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          datasetValidatorResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          sendDatasetsToDataWarehouse: true
          description: description
          computeSize: computeSize
          csmSimulation: csmSimulation
          tags:
          - tags
          - tags
          parameterGroups:
          - parameterGroups
          - parameterGroups
          name: name
          engineResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          postRunResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          id: id
          sendInputParametersToDataWarehouse: true
        - preRunResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          parametersHandlerResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          datasetValidatorResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          sendDatasetsToDataWarehouse: true
          description: description
          computeSize: computeSize
          csmSimulation: csmSimulation
          tags:
          - tags
          - tags
          parameterGroups:
          - parameterGroups
          - parameterGroups
          name: name
          engineResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          postRunResource:
            customUri: customUri
            resourcePath: resourcePath
            storageType: local
          id: id
          sendInputParametersToDataWarehouse: true
        repository: repository
        ownerId: ownerId
        version: version
        url: url
        tags:
        - tags
        - tags
        parameterGroups:
        - options:
            key: "{}"
          id: id
          isTable: true
          parameters:
          - parameters
          - parameters
          parentId: parentId
          labels:
            key: "{}"
        - options:
            key: "{}"
          id: id
          isTable: true
          parameters:
          - parameters
          - parameters
          parentId: parentId
          labels:
            key: "{}"
        name: name
        id: id
        parameters:
        - varType: varType
          options:
            key: "{}"
          id: id
          labels:
            key: "{}"
        - varType: varType
          options:
            key: "{}"
          id: id
          labels:
            key: "{}"
        key: key
      properties:
        id:
          description: the Solution version unique identifier
          readOnly: true
          type: string
        key:
          description: the Solution key which group Solution versions
          type: string
        name:
          description: the Solution name
          type: string
        description:
          description: the Solution description
          type: string
        repository:
          description: the registry repository containing the image
          type: string
        csmSimulator:
          description: the main Cosmo Tech simulator name used in standard Run Template
          type: string
        version:
          description: the Solution version MAJOR.MINOR.PATCH. Must be aligned with
            an existing repository tag
          type: string
        ownerId:
          description: the User id which own this Solution
          readOnly: true
          type: string
        url:
          description: an optional URL link to solution page
          type: string
        tags:
          description: the list of tags
          items:
            type: string
          type: array
        parameters:
          description: the list of Run Template Parameters
          items:
            $ref: '#/components/schemas/RunTemplateParameter'
          type: array
        parameterGroups:
          description: the list of parameters groups for the Run Templates
          items:
            $ref: '#/components/schemas/RunTemplateParameterGroup'
          type: array
        run_templates:
          description: list of Run Template
          items:
            $ref: '#/components/schemas/RunTemplate'
          type: array
      required:
      - key
      - name
      - repository
      - version
      type: object
    TranslatedLabels:
      additionalProperties: true
      description: a translated label with key as ISO 639-1 code
      type: object
    User:
      description: a User
      example:
        platformRoles:
        - Admin
        - Admin
        name: name
        organizations:
        - roles:
          - roles
          - roles
          name: name
          id: id
          workspaces:
          - roles:
            - roles
            - roles
            name: name
            id: id
          - roles:
            - roles
            - roles
            name: name
            id: id
        - roles:
          - roles
          - roles
          name: name
          id: id
          workspaces:
          - roles:
            - roles
            - roles
            name: name
            id: id
          - roles:
            - roles
            - roles
            name: name
            id: id
        id: id
      properties:
        id:
          description: the User unique identifier
          readOnly: true
          type: string
        name:
          description: the User name
          type: string
        platformRoles:
          description: the list of Platform roles
          items:
            enum:
            - Admin
            - User
            - ConnectorDeveloper
            type: string
          type: array
        organizations:
          items:
            $ref: '#/components/schemas/UserOrganization'
          readOnly: true
          type: array
      required:
      - name
      - platformRoles
      type: object
    UserOrganization:
      description: The organization of the user
      example:
        roles:
        - roles
        - roles
        name: name
        id: id
        workspaces:
        - roles:
          - roles
          - roles
          name: name
          id: id
        - roles:
          - roles
          - roles
          name: name
          id: id
      properties:
        id:
          description: the Organization id
          type: string
        name:
          description: the Organization name
          type: string
        roles:
          description: the roles of the User in the Organization
          items:
            type: string
          type: array
        workspaces:
          description: the list of Workspaces roles
          items:
            $ref: '#/components/schemas/UserWorkspace'
          readOnly: true
          type: array
      type: object
    UserWorkspace:
      description: the list of User roles for a Workspace
      example:
        roles:
        - roles
        - roles
        name: name
        id: id
      properties:
        id:
          description: the Workspace Id
          readOnly: true
          type: string
        name:
          description: the Workspace name
          readOnly: true
          type: string
        roles:
          description: the roles of the User in the Workspace
          items:
            type: string
          type: array
      readOnly: true
      type: object
    Validator:
      description: a Validator to validate a Dataset
      example:
        name: name
        description: description
        id: id
        repository: repository
        ownerId: ownerId
        version: version
        url: url
        tags:
        - tags
        - tags
      properties:
        id:
          description: the Validator id
          readOnly: true
          type: string
        name:
          description: the Validator name
          type: string
        description:
          description: the Validator description
          type: string
        repository:
          description: the registry repository containing the Validator image
          type: string
        version:
          description: the Validator version MAJOR.MINOR.PATCH. Must be aligned with
            an existing repository tag
          type: string
        ownerId:
          description: the User id which own this Validator
          readOnly: true
          type: string
        url:
          description: an optional URL link to Validator page
          type: string
        tags:
          description: the list of tags
          items:
            type: string
          type: array
      required:
      - id
      - name
      - repository
      - version
      type: object
    ValidatorRun:
      description: a Validator Run
      example:
        validatorName: validatorName
        datasetName: datasetName
        validatorId: validatorId
        datasetId: datasetId
        id: id
        state: Running
        containerId: containerId
        logs: logs
      properties:
        id:
          description: the Validator Run id
          readOnly: true
          type: string
        validatorId:
          description: the Validator id
          readOnly: true
          type: string
        validatorName:
          description: the validator name
          readOnly: true
          type: string
        datasetId:
          description: the Dataset id to run the validator on
          type: string
        datasetName:
          description: the Dataset name
          readOnly: true
          type: string
        state:
          description: the Validator Run state
          enum:
          - Running
          - Finished
          - OnError
          readOnly: true
          type: string
        containerId:
          description: the Validator Run container id
          readOnly: true
          type: string
        logs:
          description: the Validator Run logs
          readOnly: true
          type: string
      required:
      - datasetId
      type: object
    Workspace:
      description: a Workspace
      example:
        webApp:
          options:
            key: "{}"
          url: url
          iframes:
            key: "{}"
        solution:
          runTemplateFilter:
          - runTemplateFilter
          - runTemplateFilter
          solutionId: solutionId
          defaultRunTemplateDataset:
            key: "{}"
        name: name
        description: description
        id: id
        services:
          tenantCredentials:
            key: "{}"
          storage:
            platformService: platformService
            credentials:
              key: "{}"
            baseUri: baseUri
            resourceUri: resourceUri
            cloudService: cloudService
          resultsEventBus:
            platformService: platformService
            credentials:
              key: "{}"
            baseUri: baseUri
            resourceUri: resourceUri
            cloudService: cloudService
          dataWarehouse:
            platformService: platformService
            credentials:
              key: "{}"
            baseUri: baseUri
            resourceUri: resourceUri
            cloudService: cloudService
          scenariorunEventBus:
            platformService: platformService
            credentials:
              key: "{}"
            baseUri: baseUri
            resourceUri: resourceUri
            cloudService: cloudService
        ownerId: ownerId
        version: version
        sendInputToDataWarehouse: true
        users:
        - roles:
          - Admin
          - Admin
          name: name
          id: id
        - roles:
          - Admin
          - Admin
          name: name
          id: id
        tags:
        - tags
        - tags
      properties:
        id:
          description: the Workspace version unique identifier
          readOnly: true
          type: string
        name:
          description: the Workspace name
          type: string
        description:
          description: the Workspace description
          type: string
        version:
          description: the Workspace version MAJOR.MINOR.PATCH.
          type: string
        tags:
          description: the list of tags
          items:
            type: string
          type: array
        ownerId:
          description: the user id which own this workspace
          readOnly: true
          type: string
        solution:
          $ref: '#/components/schemas/WorkspaceSolution'
        users:
          description: the list of users Id with their role
          items:
            $ref: '#/components/schemas/WorkspaceUser'
          type: array
        webApp:
          $ref: '#/components/schemas/WorkspaceWebApp'
        services:
          $ref: '#/components/schemas/WorkspaceServices'
        sendInputToDataWarehouse:
          default: true
          description: default setting for all Scenarios and Run Templates to set
            whether or not the Dataset values and the input parameters values are
            send to the DataWarehouse prior to the ScenarioRun
          type: boolean
      required:
      - name
      - solution
      type: object
    WorkspaceFile:
      description: a Workspace File resource
      example:
        fileName: fileName
      properties:
        fileName:
          description: the Workspace File name
          type: string
      type: object
    WorkspaceService:
      description: a cloud service resource
      example:
        platformService: platformService
        credentials:
          key: "{}"
        baseUri: baseUri
        resourceUri: resourceUri
        cloudService: cloudService
      properties:
        cloudService:
          description: the cloud service name
          readOnly: true
          type: string
        baseUri:
          description: the platform base uri for this service
          readOnly: true
          type: string
        platformService:
          description: the Platform service associated to the resource
          type: string
        resourceUri:
          description: the workspace specific uri for this service resource
          type: string
        credentials:
          additionalProperties: true
          description: a freeform credentials object. Structure depends on service
          type: object
      type: object
    WorkspaceServices:
      description: the cloud service resources of the Workspace
      example:
        tenantCredentials:
          key: "{}"
        storage:
          platformService: platformService
          credentials:
            key: "{}"
          baseUri: baseUri
          resourceUri: resourceUri
          cloudService: cloudService
        resultsEventBus:
          platformService: platformService
          credentials:
            key: "{}"
          baseUri: baseUri
          resourceUri: resourceUri
          cloudService: cloudService
        dataWarehouse:
          platformService: platformService
          credentials:
            key: "{}"
          baseUri: baseUri
          resourceUri: resourceUri
          cloudService: cloudService
        scenariorunEventBus:
          platformService: platformService
          credentials:
            key: "{}"
          baseUri: baseUri
          resourceUri: resourceUri
          cloudService: cloudService
      properties:
        tenantCredentials:
          additionalProperties: true
          description: a freeform credentials object for the Organization tenant.
            Structure depends on cloud provider
          readOnly: true
          type: object
        resultsEventBus:
          $ref: '#/components/schemas/WorkspaceService'
        scenariorunEventBus:
          $ref: '#/components/schemas/WorkspaceService'
        dataWarehouse:
          $ref: '#/components/schemas/WorkspaceService'
        storage:
          $ref: '#/components/schemas/WorkspaceService'
      type: object
    WorkspaceSolution:
      description: the Workspace Solution configuration
      example:
        runTemplateFilter:
        - runTemplateFilter
        - runTemplateFilter
        solutionId: solutionId
        defaultRunTemplateDataset:
          key: "{}"
      properties:
        solutionId:
          description: the Solution Id attached to this workspace
          type: string
        runTemplateFilter:
          description: the list of Solution Run Template Id to filter
          items:
            type: string
          type: array
        defaultRunTemplateDataset:
          additionalProperties: true
          description: a map of RunTemplateId/DatasetId to set a default dataset for
            a Run Template
          type: object
      required:
      - solutionId
      type: object
    WorkspaceUser:
      description: a Workspace user with roles
      example:
        roles:
        - Admin
        - Admin
        name: name
        id: id
      properties:
        id:
          description: the User id
          type: string
        name:
          description: the User name
          readOnly: true
          type: string
        roles:
          description: the User roles
          items:
            enum:
            - Admin
            - User
            - Viewer
            type: string
          type: array
      required:
      - id
      - roles
      type: object
    WorkspaceWebApp:
      description: a Workspace Web Application
      example:
        options:
          key: "{}"
        url: url
        iframes:
          key: "{}"
      properties:
        url:
          description: the Workspace Web Application URL
          type: string
        iframes:
          additionalProperties: true
          description: a map of iframeKey/iframeURL
          type: object
        options:
          additionalProperties: true
          description: free form options for Web Application
          type: object
      required:
      - url
      type: object
    inline_object:
      properties:
        fileName:
          format: binary
          type: string
      type: object
  securitySchemes:
    oAuth2AuthCode:
      description: Azure Active Directory authentication
      flows:
        implicit:
          authorizationUrl: oauth2/authorize
          scopes: {}
      type: oauth2

